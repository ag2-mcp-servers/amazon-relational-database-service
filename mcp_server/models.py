# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T13:14:32+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, List, Optional

from pydantic import BaseModel, ConfigDict, Field, RootModel, conint, constr


class ActivityStreamMode(Enum):
    sync = 'sync'
    async_ = 'async'


class ActivityStreamPolicyStatus(Enum):
    locked = 'locked'
    unlocked = 'unlocked'
    locking_policy = 'locking-policy'
    unlocking_policy = 'unlocking-policy'


class ActivityStreamStatus(Enum):
    stopped = 'stopped'
    starting = 'starting'
    started = 'started'
    stopping = 'stopping'


class ApplyMethod(Enum):
    immediate = 'immediate'
    pending_reboot = 'pending-reboot'


class AuditPolicyState(Enum):
    locked = 'locked'
    unlocked = 'unlocked'


class AuthScheme(Enum):
    SECRETS = 'SECRETS'


class AuthorizationAlreadyExistsFault(RootModel[Any]):
    root: Any


class AuthorizationNotFoundFault(RootModel[Any]):
    root: Any


class AuthorizationQuotaExceededFault(RootModel[Any]):
    root: Any


class AutomationMode(Enum):
    full = 'full'
    all_paused = 'all-paused'


class AwsBackupRecoveryPointArn(
    RootModel[
        constr(
            pattern=r'^arn:aws[a-z-]*:backup:[-a-z0-9]+:[0-9]{12}:[-a-z]+:([a-z0-9\-]+:)?[a-z][a-z0-9\-]{0,255}$',
            min_length=43,
            max_length=350,
        )
    ]
):
    root: constr(
        pattern=r'^arn:aws[a-z-]*:backup:[-a-z0-9]+:[0-9]{12}:[-a-z]+:([a-z0-9\-]+:)?[a-z][a-z0-9\-]{0,255}$',
        min_length=43,
        max_length=350,
    )


class BackupPolicyNotFoundFault(RootModel[Any]):
    root: Any


class BlueGreenDeploymentAlreadyExistsFault(RootModel[Any]):
    root: Any


class BlueGreenDeploymentIdentifier(
    RootModel[constr(pattern=r'[A-Za-z][0-9A-Za-z-:._]*', min_length=1, max_length=255)]
):
    root: constr(pattern=r'[A-Za-z][0-9A-Za-z-:._]*', min_length=1, max_length=255)


class BlueGreenDeploymentName(
    RootModel[
        constr(
            pattern=r'[a-zA-Z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*', min_length=1, max_length=60
        )
    ]
):
    root: constr(
        pattern=r'[a-zA-Z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*', min_length=1, max_length=60
    )


class BlueGreenDeploymentNotFoundFault(RootModel[Any]):
    root: Any


class BlueGreenDeploymentStatus(RootModel[str]):
    root: str


class BlueGreenDeploymentStatusDetails(RootModel[str]):
    root: str


class BlueGreenDeploymentTaskName(RootModel[str]):
    root: str


class BlueGreenDeploymentTaskStatus(RootModel[str]):
    root: str


class Boolean(RootModel[bool]):
    root: bool


class BooleanOptional(RootModel[bool]):
    root: bool


class BucketName(RootModel[constr(pattern=r'.*', min_length=3, max_length=63)]):
    root: constr(pattern=r'.*', min_length=3, max_length=63)


class CertificateNotFoundFault(RootModel[Any]):
    root: Any


class ClientPasswordAuthType(Enum):
    MYSQL_NATIVE_PASSWORD = 'MYSQL_NATIVE_PASSWORD'
    POSTGRES_SCRAM_SHA_256 = 'POSTGRES_SCRAM_SHA_256'
    POSTGRES_MD5 = 'POSTGRES_MD5'
    SQL_SERVER_AUTHENTICATION = 'SQL_SERVER_AUTHENTICATION'


class CreateCustomDBEngineVersionFault(RootModel[Any]):
    root: Any


class CustomAvailabilityZoneNotFoundFault(RootModel[Any]):
    root: Any


class CustomDBEngineVersionAlreadyExistsFault(RootModel[Any]):
    root: Any


class CustomDBEngineVersionManifest(
    RootModel[constr(pattern=r'[\s\S]*', min_length=1, max_length=51000)]
):
    root: constr(pattern=r'[\s\S]*', min_length=1, max_length=51000)


class CustomDBEngineVersionNotFoundFault(RootModel[Any]):
    root: Any


class CustomDBEngineVersionQuotaExceededFault(RootModel[Any]):
    root: Any


class CustomEngineName(
    RootModel[constr(pattern=r'^[A-Za-z0-9-]{1,35}$', min_length=1, max_length=35)]
):
    root: constr(pattern=r'^[A-Za-z0-9-]{1,35}$', min_length=1, max_length=35)


class CustomEngineVersion(
    RootModel[constr(pattern=r'^[a-z0-9_.-]{1,60}$', min_length=1, max_length=60)]
):
    root: constr(pattern=r'^[a-z0-9_.-]{1,60}$', min_length=1, max_length=60)


class CustomEngineVersionStatus(Enum):
    available = 'available'
    inactive = 'inactive'
    inactive_except_restore = 'inactive-except-restore'


class DBClusterAlreadyExistsFault(RootModel[Any]):
    root: Any


class DBClusterBacktrackNotFoundFault(RootModel[Any]):
    root: Any


class DBClusterEndpointAlreadyExistsFault(RootModel[Any]):
    root: Any


class DBClusterEndpointNotFoundFault(RootModel[Any]):
    root: Any


class DBClusterEndpointQuotaExceededFault(RootModel[Any]):
    root: Any


class DBClusterIdentifier(
    RootModel[constr(pattern=r'[A-Za-z][0-9A-Za-z-:._]*', min_length=1, max_length=255)]
):
    root: constr(pattern=r'[A-Za-z][0-9A-Za-z-:._]*', min_length=1, max_length=255)


class DBClusterNotFoundFault(RootModel[Any]):
    root: Any


class DBClusterParameterGroupNotFoundFault(RootModel[Any]):
    root: Any


class DBClusterQuotaExceededFault(RootModel[Any]):
    root: Any


class DBClusterRoleAlreadyExistsFault(RootModel[Any]):
    root: Any


class DBClusterRoleNotFoundFault(RootModel[Any]):
    root: Any


class DBClusterRoleQuotaExceededFault(RootModel[Any]):
    root: Any


class DBClusterSnapshotAlreadyExistsFault(RootModel[Any]):
    root: Any


class DBClusterSnapshotNotFoundFault(RootModel[Any]):
    root: Any


class DBInstanceAlreadyExistsFault(RootModel[Any]):
    root: Any


class DBInstanceAutomatedBackupNotFoundFault(RootModel[Any]):
    root: Any


class DBInstanceAutomatedBackupQuotaExceededFault(RootModel[Any]):
    root: Any


class DBInstanceNotFoundFault(RootModel[Any]):
    root: Any


class DBInstanceRoleAlreadyExistsFault(RootModel[Any]):
    root: Any


class DBInstanceRoleNotFoundFault(RootModel[Any]):
    root: Any


class DBInstanceRoleQuotaExceededFault(RootModel[Any]):
    root: Any


class DBLogFileNotFoundFault(RootModel[Any]):
    root: Any


class DBParameterGroupAlreadyExistsFault(RootModel[Any]):
    root: Any


class DBParameterGroupNotFoundFault(RootModel[Any]):
    root: Any


class DBParameterGroupQuotaExceededFault(RootModel[Any]):
    root: Any


class DBProxyAlreadyExistsFault(RootModel[Any]):
    root: Any


class DBProxyEndpointAlreadyExistsFault(RootModel[Any]):
    root: Any


class DBProxyEndpointName(
    RootModel[
        constr(
            pattern=r'[a-zA-Z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*', min_length=1, max_length=63
        )
    ]
):
    root: constr(
        pattern=r'[a-zA-Z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*', min_length=1, max_length=63
    )


class DBProxyEndpointNotFoundFault(RootModel[Any]):
    root: Any


class DBProxyEndpointQuotaExceededFault(RootModel[Any]):
    root: Any


class DBProxyEndpointStatus(Enum):
    available = 'available'
    modifying = 'modifying'
    incompatible_network = 'incompatible-network'
    insufficient_resource_limits = 'insufficient-resource-limits'
    creating = 'creating'
    deleting = 'deleting'


class DBProxyEndpointTargetRole(Enum):
    READ_WRITE = 'READ_WRITE'
    READ_ONLY = 'READ_ONLY'


class DBProxyName(
    RootModel[
        constr(
            pattern=r'[a-zA-Z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*', min_length=1, max_length=63
        )
    ]
):
    root: constr(
        pattern=r'[a-zA-Z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*', min_length=1, max_length=63
    )


class DBProxyNotFoundFault(RootModel[Any]):
    root: Any


class DBProxyQuotaExceededFault(RootModel[Any]):
    root: Any


class DBProxyStatus(Enum):
    available = 'available'
    modifying = 'modifying'
    incompatible_network = 'incompatible-network'
    insufficient_resource_limits = 'insufficient-resource-limits'
    creating = 'creating'
    deleting = 'deleting'
    suspended = 'suspended'
    suspending = 'suspending'
    reactivating = 'reactivating'


class DBProxyTargetAlreadyRegisteredFault(RootModel[Any]):
    root: Any


class DBProxyTargetGroupNotFoundFault(RootModel[Any]):
    root: Any


class DBProxyTargetNotFoundFault(RootModel[Any]):
    root: Any


class DBSecurityGroupAlreadyExistsFault(RootModel[Any]):
    root: Any


class DBSecurityGroupNotFoundFault(RootModel[Any]):
    root: Any


class DBSecurityGroupNotSupportedFault(RootModel[Any]):
    root: Any


class DBSecurityGroupQuotaExceededFault(RootModel[Any]):
    root: Any


class DBSnapshotAlreadyExistsFault(RootModel[Any]):
    root: Any


class DBSnapshotNotFoundFault(RootModel[Any]):
    root: Any


class DBSubnetGroupAlreadyExistsFault(RootModel[Any]):
    root: Any


class DBSubnetGroupDoesNotCoverEnoughAZs(RootModel[Any]):
    root: Any


class DBSubnetGroupNotAllowedFault(RootModel[Any]):
    root: Any


class DBSubnetGroupNotFoundFault(RootModel[Any]):
    root: Any


class DBSubnetGroupQuotaExceededFault(RootModel[Any]):
    root: Any


class DBSubnetQuotaExceededFault(RootModel[Any]):
    root: Any


class DBUpgradeDependencyFailureFault(RootModel[Any]):
    root: Any


class DatabaseArn(
    RootModel[
        constr(pattern=r'^arn:[A-Za-z][0-9A-Za-z-:._]*', min_length=1, max_length=2048)
    ]
):
    root: constr(
        pattern=r'^arn:[A-Za-z][0-9A-Za-z-:._]*', min_length=1, max_length=2048
    )


class DeleteBlueGreenDeploymentRequest(BaseModel):
    BlueGreenDeploymentIdentifier_1: BlueGreenDeploymentIdentifier = Field(
        ..., alias='BlueGreenDeploymentIdentifier'
    )
    DeleteTarget: Optional[BooleanOptional] = None


class DeleteCustomDBEngineVersionMessage(BaseModel):
    Engine: CustomEngineName
    EngineVersion: CustomEngineVersion


class DeleteDBProxyEndpointRequest(BaseModel):
    DBProxyEndpointName_1: DBProxyEndpointName = Field(..., alias='DBProxyEndpointName')


class DeregisterDBProxyTargetsResponse(BaseModel):
    pass


class DescribeAccountAttributesMessage(BaseModel):
    pass


class Description(RootModel[constr(pattern=r'.*', min_length=1, max_length=1000)]):
    root: constr(pattern=r'.*', min_length=1, max_length=1000)


class DomainNotFoundFault(RootModel[Any]):
    root: Any


class Double(RootModel[float]):
    root: float


class DoubleOptional(RootModel[float]):
    root: float


class DoubleRange(BaseModel):
    From: Optional[Double] = None
    To: Optional[Double] = None


class DoubleRangeList(RootModel[List[DoubleRange]]):
    root: List[DoubleRange]


class Ec2ImagePropertiesNotSupportedFault(RootModel[Any]):
    root: Any


class EngineFamily(Enum):
    MYSQL = 'MYSQL'
    POSTGRESQL = 'POSTGRESQL'
    SQLSERVER = 'SQLSERVER'


class EventSubscriptionQuotaExceededFault(RootModel[Any]):
    root: Any


class ExportSourceType(Enum):
    SNAPSHOT = 'SNAPSHOT'
    CLUSTER = 'CLUSTER'


class ExportTaskAlreadyExistsFault(RootModel[Any]):
    root: Any


class ExportTaskNotFoundFault(RootModel[Any]):
    root: Any


class FailoverStatus(Enum):
    pending = 'pending'
    failing_over = 'failing-over'
    cancelling = 'cancelling'


class GlobalClusterAlreadyExistsFault(RootModel[Any]):
    root: Any


class GlobalClusterIdentifier(
    RootModel[constr(pattern=r'[A-Za-z][0-9A-Za-z-:._]*', min_length=1, max_length=255)]
):
    root: constr(pattern=r'[A-Za-z][0-9A-Za-z-:._]*', min_length=1, max_length=255)


class GlobalClusterNotFoundFault(RootModel[Any]):
    root: Any


class GlobalClusterQuotaExceededFault(RootModel[Any]):
    root: Any


class IAMAuthMode(Enum):
    DISABLED = 'DISABLED'
    REQUIRED = 'REQUIRED'
    ENABLED = 'ENABLED'


class IamRoleMissingPermissionsFault(RootModel[Any]):
    root: Any


class IamRoleNotFoundFault(RootModel[Any]):
    root: Any


class InstanceQuotaExceededFault(RootModel[Any]):
    root: Any


class InsufficientAvailableIPsInSubnetFault(RootModel[Any]):
    root: Any


class InsufficientDBClusterCapacityFault(RootModel[Any]):
    root: Any


class InsufficientDBInstanceCapacityFault(RootModel[Any]):
    root: Any


class InsufficientStorageClusterCapacityFault(RootModel[Any]):
    root: Any


class Integer(RootModel[int]):
    root: int


class IntegerOptional(RootModel[int]):
    root: int


class InvalidBlueGreenDeploymentStateFault(RootModel[Any]):
    root: Any


class InvalidCustomDBEngineVersionStateFault(RootModel[Any]):
    root: Any


class InvalidDBClusterCapacityFault(RootModel[Any]):
    root: Any


class InvalidDBClusterEndpointStateFault(RootModel[Any]):
    root: Any


class InvalidDBClusterSnapshotStateFault(RootModel[Any]):
    root: Any


class InvalidDBClusterStateFault(RootModel[Any]):
    root: Any


class InvalidDBInstanceAutomatedBackupStateFault(RootModel[Any]):
    root: Any


class InvalidDBInstanceStateFault(RootModel[Any]):
    root: Any


class InvalidDBParameterGroupStateFault(RootModel[Any]):
    root: Any


class InvalidDBProxyEndpointStateFault(RootModel[Any]):
    root: Any


class InvalidDBProxyStateFault(RootModel[Any]):
    root: Any


class InvalidDBSecurityGroupStateFault(RootModel[Any]):
    root: Any


class InvalidDBSnapshotStateFault(RootModel[Any]):
    root: Any


class InvalidDBSubnetGroupFault(RootModel[Any]):
    root: Any


class InvalidDBSubnetGroupStateFault(RootModel[Any]):
    root: Any


class InvalidDBSubnetStateFault(RootModel[Any]):
    root: Any


class InvalidEventSubscriptionStateFault(RootModel[Any]):
    root: Any


class InvalidExportOnlyFault(RootModel[Any]):
    root: Any


class InvalidExportSourceStateFault(RootModel[Any]):
    root: Any


class InvalidExportTaskStateFault(RootModel[Any]):
    root: Any


class InvalidGlobalClusterStateFault(RootModel[Any]):
    root: Any


class InvalidOptionGroupStateFault(RootModel[Any]):
    root: Any


class InvalidRestoreFault(RootModel[Any]):
    root: Any


class InvalidS3BucketFault(RootModel[Any]):
    root: Any


class InvalidSubnet(RootModel[Any]):
    root: Any


class InvalidVPCNetworkStateFault(RootModel[Any]):
    root: Any


class KMSKeyNotAccessibleFault(RootModel[Any]):
    root: Any


class KmsKeyIdOrArn(
    RootModel[constr(pattern=r'[a-zA-Z0-9_:\-\/]+', min_length=1, max_length=2048)]
):
    root: constr(pattern=r'[a-zA-Z0-9_:\-\/]+', min_length=1, max_length=2048)


class Long(RootModel[int]):
    root: int


class LongOptional(RootModel[int]):
    root: int


class MaxRecords(RootModel[conint(ge=20, le=100)]):
    root: conint(ge=20, le=100)


class ModifyCustomDBEngineVersionMessage(BaseModel):
    Description_1: Optional[Description] = Field(None, alias='Description')
    Engine: CustomEngineName
    EngineVersion: CustomEngineVersion
    Status: Optional[CustomEngineVersionStatus] = None


class NetworkTypeNotSupported(RootModel[Any]):
    root: Any


class OptionGroupAlreadyExistsFault(RootModel[Any]):
    root: Any


class OptionGroupNotFoundFault(RootModel[Any]):
    root: Any


class OptionGroupQuotaExceededFault(RootModel[Any]):
    root: Any


class PointInTimeRestoreNotEnabledFault(RootModel[Any]):
    root: Any


class ProvisionedIopsNotAvailableInAZFault(RootModel[Any]):
    root: Any


class Range(BaseModel):
    From: Optional[Integer] = None
    Step: Optional[IntegerOptional] = None
    To: Optional[Integer] = None


class RangeList(RootModel[List[Range]]):
    root: List[Range]


class ReplicaMode(Enum):
    open_read_only = 'open-read-only'
    mounted = 'mounted'


class ReservedDBInstanceAlreadyExistsFault(RootModel[Any]):
    root: Any


class ReservedDBInstanceNotFoundFault(RootModel[Any]):
    root: Any


class ReservedDBInstanceQuotaExceededFault(RootModel[Any]):
    root: Any


class ReservedDBInstancesOfferingNotFoundFault(RootModel[Any]):
    root: Any


class ResourceNotFoundFault(RootModel[Any]):
    root: Any


class SNSInvalidTopicFault(RootModel[Any]):
    root: Any


class SNSNoAuthorizationFault(RootModel[Any]):
    root: Any


class SNSTopicArnNotFoundFault(RootModel[Any]):
    root: Any


class ServerlessV2ScalingConfiguration(BaseModel):
    MaxCapacity: Optional[DoubleOptional] = None
    MinCapacity: Optional[DoubleOptional] = None


class ServerlessV2ScalingConfigurationInfo(BaseModel):
    MaxCapacity: Optional[DoubleOptional] = None
    MinCapacity: Optional[DoubleOptional] = None


class SharedSnapshotQuotaExceededFault(RootModel[Any]):
    root: Any


class SnapshotQuotaExceededFault(RootModel[Any]):
    root: Any


class SourceClusterNotSupportedFault(RootModel[Any]):
    root: Any


class SourceDatabaseNotSupportedFault(RootModel[Any]):
    root: Any


class SourceNotFoundFault(RootModel[Any]):
    root: Any


class SourceType(Enum):
    db_instance = 'db-instance'
    db_parameter_group = 'db-parameter-group'
    db_security_group = 'db-security-group'
    db_snapshot = 'db-snapshot'
    db_cluster = 'db-cluster'
    db_cluster_snapshot = 'db-cluster-snapshot'
    custom_engine_version = 'custom-engine-version'
    db_proxy = 'db-proxy'
    blue_green_deployment = 'blue-green-deployment'


class StorageQuotaExceededFault(RootModel[Any]):
    root: Any


class StorageTypeNotSupportedFault(RootModel[Any]):
    root: Any


class String(RootModel[str]):
    root: str


class String255(RootModel[constr(pattern=r'.*', min_length=1, max_length=255)]):
    root: constr(pattern=r'.*', min_length=1, max_length=255)


class StringList(RootModel[List[String]]):
    root: List[String]


class SubnetAlreadyInUse(RootModel[Any]):
    root: Any


class SubnetIdentifierList(RootModel[List[String]]):
    root: List[String]


class SubscriptionAlreadyExistFault(RootModel[Any]):
    root: Any


class SubscriptionCategoryNotFoundFault(RootModel[Any]):
    root: Any


class SubscriptionNotFoundFault(RootModel[Any]):
    root: Any


class SwitchoverDetailStatus(RootModel[str]):
    root: str


class SwitchoverReadReplicaMessage(BaseModel):
    DBInstanceIdentifier: String


class SwitchoverTimeout(RootModel[conint(ge=30)]):
    root: conint(ge=30)


class TStamp(RootModel[datetime]):
    root: datetime


class Tag(BaseModel):
    Key: Optional[String] = None
    Value: Optional[String] = None


class TagList(RootModel[List[Tag]]):
    root: List[Tag] = Field(
        ...,
        description='A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> ',
    )


class TagListMessage(BaseModel):
    TagList_1: Optional[TagList] = Field(None, alias='TagList')


class TargetDBClusterParameterGroupName(
    RootModel[
        constr(
            pattern=r'[A-Za-z](?!.*--)[0-9A-Za-z-]*[^-]|^default(?!.*--)(?!.*\.\.)[0-9A-Za-z-.]*[^-]',
            min_length=1,
            max_length=255,
        )
    ]
):
    model_config = ConfigDict(
        regex_engine="python-re",
    )
    root: constr(
        pattern=r'[A-Za-z](?!.*--)[0-9A-Za-z-]*[^-]|^default(?!.*--)(?!.*\.\.)[0-9A-Za-z-.]*[^-]',
        min_length=1,
        max_length=255,
    )


class TargetDBParameterGroupName(
    RootModel[
        constr(
            pattern=r'[A-Za-z](?!.*--)[0-9A-Za-z-]*[^-]|^default(?!.*--)(?!.*\.\.)[0-9A-Za-z-.]*[^-]',
            min_length=1,
            max_length=255,
        )
    ]
):
    model_config = ConfigDict(
        regex_engine="python-re",
    )
    root: constr(
        pattern=r'[A-Za-z](?!.*--)[0-9A-Za-z-]*[^-]|^default(?!.*--)(?!.*\.\.)[0-9A-Za-z-.]*[^-]',
        min_length=1,
        max_length=255,
    )


class TargetEngineVersion(
    RootModel[constr(pattern=r'[0-9A-Za-z-_.]+', min_length=1, max_length=64)]
):
    root: constr(pattern=r'[0-9A-Za-z-_.]+', min_length=1, max_length=64)


class TargetHealthReason(Enum):
    UNREACHABLE = 'UNREACHABLE'
    CONNECTION_FAILED = 'CONNECTION_FAILED'
    AUTH_FAILURE = 'AUTH_FAILURE'
    PENDING_PROXY_CAPACITY = 'PENDING_PROXY_CAPACITY'
    INVALID_REPLICATION_STATE = 'INVALID_REPLICATION_STATE'


class TargetRole(Enum):
    READ_WRITE = 'READ_WRITE'
    READ_ONLY = 'READ_ONLY'
    UNKNOWN = 'UNKNOWN'


class TargetState(Enum):
    REGISTERING = 'REGISTERING'
    AVAILABLE = 'AVAILABLE'
    UNAVAILABLE = 'UNAVAILABLE'


class TargetType(Enum):
    RDS_INSTANCE = 'RDS_INSTANCE'
    RDS_SERVERLESS_ENDPOINT = 'RDS_SERVERLESS_ENDPOINT'
    TRACKED_CLUSTER = 'TRACKED_CLUSTER'


class Timezone(BaseModel):
    TimezoneName: Optional[String] = None


class UserAuthConfig(BaseModel):
    AuthScheme_1: Optional[AuthScheme] = Field(None, alias='AuthScheme')
    ClientPasswordAuthType_1: Optional[ClientPasswordAuthType] = Field(
        None, alias='ClientPasswordAuthType'
    )
    Description: Optional[String] = None
    IAMAuth: Optional[IAMAuthMode] = None
    SecretArn: Optional[String] = None
    UserName: Optional[String] = None


class UserAuthConfigInfo(BaseModel):
    AuthScheme_1: Optional[AuthScheme] = Field(None, alias='AuthScheme')
    ClientPasswordAuthType_1: Optional[ClientPasswordAuthType] = Field(
        None, alias='ClientPasswordAuthType'
    )
    Description: Optional[String] = None
    IAMAuth: Optional[IAMAuthMode] = None
    SecretArn: Optional[String] = None
    UserName: Optional[String] = None


class UserAuthConfigInfoList(RootModel[List[UserAuthConfigInfo]]):
    root: List[UserAuthConfigInfo]


class UserAuthConfigList(RootModel[List[UserAuthConfig]]):
    root: List[UserAuthConfig]


class ValidStorageOptions(BaseModel):
    IopsToStorageRatio: Optional[DoubleRangeList] = None
    ProvisionedIops: Optional[RangeList] = None
    ProvisionedStorageThroughput: Optional[RangeList] = None
    StorageSize: Optional[RangeList] = None
    StorageThroughputToIopsRatio: Optional[DoubleRangeList] = None
    StorageType: Optional[String] = None
    SupportsStorageAutoscaling: Optional[Boolean] = None


class ValidStorageOptionsList(RootModel[List[ValidStorageOptions]]):
    root: List[ValidStorageOptions]


class VpcSecurityGroupIdList(RootModel[List[String]]):
    root: List[String]


class VpcSecurityGroupMembership(BaseModel):
    Status: Optional[String] = None
    VpcSecurityGroupId: Optional[String] = None


class VpcSecurityGroupMembershipList(RootModel[List[VpcSecurityGroupMembership]]):
    root: List[VpcSecurityGroupMembership]


class WriteForwardingStatus(Enum):
    enabled = 'enabled'
    disabled = 'disabled'
    enabling = 'enabling'
    disabling = 'disabling'
    unknown = 'unknown'


class Action(Enum):
    AddRoleToDBCluster = 'AddRoleToDBCluster'


class Version(Enum):
    field_2014_10_31 = '2014-10-31'


class Action4(Enum):
    AddRoleToDBInstance = 'AddRoleToDBInstance'


class Action8(Enum):
    AddSourceIdentifierToSubscription = 'AddSourceIdentifierToSubscription'


class Action12(Enum):
    AddTagsToResource = 'AddTagsToResource'


class Tags(RootModel[List[Tag]]):
    root: List[Tag] = Field(
        ...,
        description='A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> ',
    )


class Action16(Enum):
    ApplyPendingMaintenanceAction = 'ApplyPendingMaintenanceAction'


class Action20(Enum):
    AuthorizeDBSecurityGroupIngress = 'AuthorizeDBSecurityGroupIngress'


class Action24(Enum):
    BacktrackDBCluster = 'BacktrackDBCluster'


class Action28(Enum):
    CancelExportTask = 'CancelExportTask'


class Action32(Enum):
    CopyDBClusterParameterGroup = 'CopyDBClusterParameterGroup'


class Action36(Enum):
    CopyDBClusterSnapshot = 'CopyDBClusterSnapshot'


class Action40(Enum):
    CopyDBParameterGroup = 'CopyDBParameterGroup'


class Action44(Enum):
    CopyDBSnapshot = 'CopyDBSnapshot'


class Action48(Enum):
    CopyOptionGroup = 'CopyOptionGroup'


class Action52(Enum):
    CreateBlueGreenDeployment = 'CreateBlueGreenDeployment'


class Action56(Enum):
    CreateCustomDBEngineVersion = 'CreateCustomDBEngineVersion'


class ScalingConfiguration(BaseModel):
    AutoPause: Optional[BooleanOptional] = None
    MaxCapacity: Optional[IntegerOptional] = None
    MinCapacity: Optional[IntegerOptional] = None
    SecondsBeforeTimeout: Optional[IntegerOptional] = None
    SecondsUntilAutoPause: Optional[IntegerOptional] = None
    TimeoutAction: Optional[String] = None


class Action60(Enum):
    CreateDBCluster = 'CreateDBCluster'


class AvailabilityZones(RootModel[List[String]]):
    root: List[String]


class VpcSecurityGroupIds(RootModel[List[String]]):
    root: List[String]


class EnableCloudwatchLogsExports(RootModel[List[String]]):
    root: List[String]


class Action64(Enum):
    CreateDBClusterEndpoint = 'CreateDBClusterEndpoint'


class StaticMembers(RootModel[List[String]]):
    root: List[String]


class ExcludedMembers(RootModel[List[String]]):
    root: List[String]


class Action68(Enum):
    CreateDBClusterParameterGroup = 'CreateDBClusterParameterGroup'


class Action72(Enum):
    CreateDBClusterSnapshot = 'CreateDBClusterSnapshot'


class Action76(Enum):
    CreateDBInstance = 'CreateDBInstance'


class DBSecurityGroups1(RootModel[List[String]]):
    root: List[String]


class Action80(Enum):
    CreateDBInstanceReadReplica = 'CreateDBInstanceReadReplica'


class Action84(Enum):
    CreateDBParameterGroup = 'CreateDBParameterGroup'


class Action88(Enum):
    CreateDBProxy = 'CreateDBProxy'


class Auth(RootModel[List[UserAuthConfig]]):
    root: List[UserAuthConfig]


class VpcSubnetIds(RootModel[List[String]]):
    root: List[String]


class TargetRole1(Enum):
    READ_WRITE = 'READ_WRITE'
    READ_ONLY = 'READ_ONLY'


class Action92(Enum):
    CreateDBProxyEndpoint = 'CreateDBProxyEndpoint'


class Action96(Enum):
    CreateDBSecurityGroup = 'CreateDBSecurityGroup'


class Action100(Enum):
    CreateDBSnapshot = 'CreateDBSnapshot'


class Action104(Enum):
    CreateDBSubnetGroup = 'CreateDBSubnetGroup'


class SubnetIds(RootModel[List[String]]):
    root: List[String]


class Action108(Enum):
    CreateEventSubscription = 'CreateEventSubscription'


class EventCategories(RootModel[List[String]]):
    root: List[String]


class SourceIds(RootModel[List[String]]):
    root: List[String]


class Action112(Enum):
    CreateGlobalCluster = 'CreateGlobalCluster'


class Action116(Enum):
    CreateOptionGroup = 'CreateOptionGroup'


class Action120(Enum):
    DeleteBlueGreenDeployment = 'DeleteBlueGreenDeployment'


class Action124(Enum):
    DeleteCustomDBEngineVersion = 'DeleteCustomDBEngineVersion'


class Action128(Enum):
    DeleteDBCluster = 'DeleteDBCluster'


class Action132(Enum):
    DeleteDBClusterEndpoint = 'DeleteDBClusterEndpoint'


class Action136(Enum):
    DeleteDBClusterParameterGroup = 'DeleteDBClusterParameterGroup'


class Action140(Enum):
    DeleteDBClusterSnapshot = 'DeleteDBClusterSnapshot'


class Action144(Enum):
    DeleteDBInstance = 'DeleteDBInstance'


class Action148(Enum):
    DeleteDBInstanceAutomatedBackup = 'DeleteDBInstanceAutomatedBackup'


class Action152(Enum):
    DeleteDBParameterGroup = 'DeleteDBParameterGroup'


class Action156(Enum):
    DeleteDBProxy = 'DeleteDBProxy'


class Action160(Enum):
    DeleteDBProxyEndpoint = 'DeleteDBProxyEndpoint'


class Action164(Enum):
    DeleteDBSecurityGroup = 'DeleteDBSecurityGroup'


class Action168(Enum):
    DeleteDBSnapshot = 'DeleteDBSnapshot'


class Action172(Enum):
    DeleteDBSubnetGroup = 'DeleteDBSubnetGroup'


class Action176(Enum):
    DeleteEventSubscription = 'DeleteEventSubscription'


class Action180(Enum):
    DeleteGlobalCluster = 'DeleteGlobalCluster'


class Action184(Enum):
    DeleteOptionGroup = 'DeleteOptionGroup'


class Action188(Enum):
    DeregisterDBProxyTargets = 'DeregisterDBProxyTargets'


class DBInstanceIdentifiers(RootModel[List[String]]):
    root: List[String]


class DBClusterIdentifiers(RootModel[List[String]]):
    root: List[String]


class Action192(Enum):
    DescribeAccountAttributes = 'DescribeAccountAttributes'


class Action196(Enum):
    DescribeBlueGreenDeployments = 'DescribeBlueGreenDeployments'


class Action200(Enum):
    DescribeCertificates = 'DescribeCertificates'


class Action204(Enum):
    DescribeDBClusterBacktracks = 'DescribeDBClusterBacktracks'


class Action208(Enum):
    DescribeDBClusterEndpoints = 'DescribeDBClusterEndpoints'


class Action212(Enum):
    DescribeDBClusterParameterGroups = 'DescribeDBClusterParameterGroups'


class Action216(Enum):
    DescribeDBClusterParameters = 'DescribeDBClusterParameters'


class Action220(Enum):
    DescribeDBClusterSnapshotAttributes = 'DescribeDBClusterSnapshotAttributes'


class Action224(Enum):
    DescribeDBClusterSnapshots = 'DescribeDBClusterSnapshots'


class Action228(Enum):
    DescribeDBClusters = 'DescribeDBClusters'


class Action232(Enum):
    DescribeDBEngineVersions = 'DescribeDBEngineVersions'


class Action236(Enum):
    DescribeDBInstanceAutomatedBackups = 'DescribeDBInstanceAutomatedBackups'


class Action240(Enum):
    DescribeDBInstances = 'DescribeDBInstances'


class Action244(Enum):
    DescribeDBLogFiles = 'DescribeDBLogFiles'


class Action248(Enum):
    DescribeDBParameterGroups = 'DescribeDBParameterGroups'


class Action252(Enum):
    DescribeDBParameters = 'DescribeDBParameters'


class Action256(Enum):
    DescribeDBProxies = 'DescribeDBProxies'


class Action260(Enum):
    DescribeDBProxyEndpoints = 'DescribeDBProxyEndpoints'


class Action264(Enum):
    DescribeDBProxyTargetGroups = 'DescribeDBProxyTargetGroups'


class Action268(Enum):
    DescribeDBProxyTargets = 'DescribeDBProxyTargets'


class Action272(Enum):
    DescribeDBSecurityGroups = 'DescribeDBSecurityGroups'


class Action276(Enum):
    DescribeDBSnapshotAttributes = 'DescribeDBSnapshotAttributes'


class Action280(Enum):
    DescribeDBSnapshots = 'DescribeDBSnapshots'


class Action284(Enum):
    DescribeDBSubnetGroups = 'DescribeDBSubnetGroups'


class Action288(Enum):
    DescribeEngineDefaultClusterParameters = 'DescribeEngineDefaultClusterParameters'


class Action292(Enum):
    DescribeEngineDefaultParameters = 'DescribeEngineDefaultParameters'


class Action296(Enum):
    DescribeEventCategories = 'DescribeEventCategories'


class Action300(Enum):
    DescribeEventSubscriptions = 'DescribeEventSubscriptions'


class Action304(Enum):
    DescribeEvents = 'DescribeEvents'


class SourceType3(Enum):
    SNAPSHOT = 'SNAPSHOT'
    CLUSTER = 'CLUSTER'


class Action308(Enum):
    DescribeExportTasks = 'DescribeExportTasks'


class Action312(Enum):
    DescribeGlobalClusters = 'DescribeGlobalClusters'


class Action316(Enum):
    DescribeOptionGroupOptions = 'DescribeOptionGroupOptions'


class Action320(Enum):
    DescribeOptionGroups = 'DescribeOptionGroups'


class Action324(Enum):
    DescribeOrderableDBInstanceOptions = 'DescribeOrderableDBInstanceOptions'


class Action328(Enum):
    DescribePendingMaintenanceActions = 'DescribePendingMaintenanceActions'


class Action332(Enum):
    DescribeReservedDBInstances = 'DescribeReservedDBInstances'


class Action336(Enum):
    DescribeReservedDBInstancesOfferings = 'DescribeReservedDBInstancesOfferings'


class Action340(Enum):
    DescribeSourceRegions = 'DescribeSourceRegions'


class Action344(Enum):
    DescribeValidDBInstanceModifications = 'DescribeValidDBInstanceModifications'


class Action348(Enum):
    DownloadDBLogFilePortion = 'DownloadDBLogFilePortion'


class Action352(Enum):
    FailoverDBCluster = 'FailoverDBCluster'


class Action356(Enum):
    FailoverGlobalCluster = 'FailoverGlobalCluster'


class Action360(Enum):
    ListTagsForResource = 'ListTagsForResource'


class Action364(Enum):
    ModifyActivityStream = 'ModifyActivityStream'


class Action368(Enum):
    ModifyCertificates = 'ModifyCertificates'


class Action372(Enum):
    ModifyCurrentDBClusterCapacity = 'ModifyCurrentDBClusterCapacity'


class Status(Enum):
    available = 'available'
    inactive = 'inactive'
    inactive_except_restore = 'inactive-except-restore'


class Action376(Enum):
    ModifyCustomDBEngineVersion = 'ModifyCustomDBEngineVersion'


class Action380(Enum):
    ModifyDBCluster = 'ModifyDBCluster'


class Action384(Enum):
    ModifyDBClusterEndpoint = 'ModifyDBClusterEndpoint'


class Action388(Enum):
    ModifyDBClusterParameterGroup = 'ModifyDBClusterParameterGroup'


class Action392(Enum):
    ModifyDBClusterSnapshotAttribute = 'ModifyDBClusterSnapshotAttribute'


class ValuesToAdd(RootModel[List[String]]):
    root: List[String]


class ValuesToRemove(RootModel[List[String]]):
    root: List[String]


class Action396(Enum):
    ModifyDBInstance = 'ModifyDBInstance'


class Action400(Enum):
    ModifyDBParameterGroup = 'ModifyDBParameterGroup'


class Action404(Enum):
    ModifyDBProxy = 'ModifyDBProxy'


class SecurityGroups(RootModel[List[String]]):
    root: List[String]


class Action408(Enum):
    ModifyDBProxyEndpoint = 'ModifyDBProxyEndpoint'


class ConnectionPoolConfig(BaseModel):
    ConnectionBorrowTimeout: Optional[IntegerOptional] = None
    InitQuery: Optional[String] = None
    MaxConnectionsPercent: Optional[IntegerOptional] = None
    MaxIdleConnectionsPercent: Optional[IntegerOptional] = None
    SessionPinningFilters: Optional[StringList] = None


class Action412(Enum):
    ModifyDBProxyTargetGroup = 'ModifyDBProxyTargetGroup'


class Action416(Enum):
    ModifyDBSnapshot = 'ModifyDBSnapshot'


class Action420(Enum):
    ModifyDBSnapshotAttribute = 'ModifyDBSnapshotAttribute'


class Action424(Enum):
    ModifyDBSubnetGroup = 'ModifyDBSubnetGroup'


class Action428(Enum):
    ModifyEventSubscription = 'ModifyEventSubscription'


class Action432(Enum):
    ModifyGlobalCluster = 'ModifyGlobalCluster'


class Action436(Enum):
    ModifyOptionGroup = 'ModifyOptionGroup'


class OptionsToRemove(RootModel[List[String]]):
    root: List[String]


class Action440(Enum):
    PromoteReadReplica = 'PromoteReadReplica'


class Action444(Enum):
    PromoteReadReplicaDBCluster = 'PromoteReadReplicaDBCluster'


class Action448(Enum):
    PurchaseReservedDBInstancesOffering = 'PurchaseReservedDBInstancesOffering'


class Action452(Enum):
    RebootDBCluster = 'RebootDBCluster'


class Action456(Enum):
    RebootDBInstance = 'RebootDBInstance'


class Action460(Enum):
    RegisterDBProxyTargets = 'RegisterDBProxyTargets'


class Action464(Enum):
    RemoveFromGlobalCluster = 'RemoveFromGlobalCluster'


class Action468(Enum):
    RemoveRoleFromDBCluster = 'RemoveRoleFromDBCluster'


class Action472(Enum):
    RemoveRoleFromDBInstance = 'RemoveRoleFromDBInstance'


class Action476(Enum):
    RemoveSourceIdentifierFromSubscription = 'RemoveSourceIdentifierFromSubscription'


class Action480(Enum):
    RemoveTagsFromResource = 'RemoveTagsFromResource'


class TagKeys(RootModel[List[String]]):
    root: List[String]


class Action484(Enum):
    ResetDBClusterParameterGroup = 'ResetDBClusterParameterGroup'


class Action488(Enum):
    ResetDBParameterGroup = 'ResetDBParameterGroup'


class Action492(Enum):
    RestoreDBClusterFromS3 = 'RestoreDBClusterFromS3'


class Action496(Enum):
    RestoreDBClusterFromSnapshot = 'RestoreDBClusterFromSnapshot'


class Action500(Enum):
    RestoreDBClusterToPointInTime = 'RestoreDBClusterToPointInTime'


class Action504(Enum):
    RestoreDBInstanceFromDBSnapshot = 'RestoreDBInstanceFromDBSnapshot'


class Action508(Enum):
    RestoreDBInstanceFromS3 = 'RestoreDBInstanceFromS3'


class Action512(Enum):
    RestoreDBInstanceToPointInTime = 'RestoreDBInstanceToPointInTime'


class Action516(Enum):
    RevokeDBSecurityGroupIngress = 'RevokeDBSecurityGroupIngress'


class Mode(Enum):
    sync = 'sync'
    async_ = 'async'


class Action520(Enum):
    StartActivityStream = 'StartActivityStream'


class Action524(Enum):
    StartDBCluster = 'StartDBCluster'


class Action528(Enum):
    StartDBInstance = 'StartDBInstance'


class Action532(Enum):
    StartDBInstanceAutomatedBackupsReplication = (
        'StartDBInstanceAutomatedBackupsReplication'
    )


class Action536(Enum):
    StartExportTask = 'StartExportTask'


class ExportOnly(RootModel[List[String]]):
    root: List[String]


class Action540(Enum):
    StopActivityStream = 'StopActivityStream'


class Action544(Enum):
    StopDBCluster = 'StopDBCluster'


class Action548(Enum):
    StopDBInstance = 'StopDBInstance'


class Action552(Enum):
    StopDBInstanceAutomatedBackupsReplication = (
        'StopDBInstanceAutomatedBackupsReplication'
    )


class Action556(Enum):
    SwitchoverBlueGreenDeployment = 'SwitchoverBlueGreenDeployment'


class Action560(Enum):
    SwitchoverReadReplica = 'SwitchoverReadReplica'


class AccountQuota(BaseModel):
    AccountQuotaName: Optional[String] = None
    Max: Optional[Long] = None
    Used: Optional[Long] = None


class AccountQuotaList(RootModel[List[AccountQuota]]):
    root: List[AccountQuota]


class ActivityStreamModeList(RootModel[List[String]]):
    root: List[String]


class AddRoleToDBClusterMessage(BaseModel):
    DBClusterIdentifier: String
    FeatureName: Optional[String] = None
    RoleArn: String


class AddRoleToDBInstanceMessage(BaseModel):
    DBInstanceIdentifier: String
    FeatureName: String
    RoleArn: String


class AddSourceIdentifierToSubscriptionMessage(BaseModel):
    SourceIdentifier: String
    SubscriptionName: String


class AddTagsToResourceMessage(BaseModel):
    ResourceName: String
    Tags: TagList


class ApplyPendingMaintenanceActionMessage(BaseModel):
    ApplyAction: String
    OptInType: String
    ResourceIdentifier: String


class AttributeValueList(RootModel[List[String]]):
    root: List[String]


class AuthorizeDBSecurityGroupIngressMessage(BaseModel):
    CIDRIP: Optional[String] = None
    DBSecurityGroupName: String
    EC2SecurityGroupId: Optional[String] = None
    EC2SecurityGroupName: Optional[String] = None
    EC2SecurityGroupOwnerId: Optional[String] = None


class AvailabilityZone(BaseModel):
    Name: Optional[String] = None


class AvailabilityZoneList(RootModel[List[AvailabilityZone]]):
    root: List[AvailabilityZone]


class AvailableProcessorFeature(BaseModel):
    AllowedValues: Optional[String] = None
    DefaultValue: Optional[String] = None
    Name: Optional[String] = None


class AvailableProcessorFeatureList(RootModel[List[AvailableProcessorFeature]]):
    root: List[AvailableProcessorFeature]


class BacktrackDBClusterMessage(BaseModel):
    BacktrackTo: TStamp
    DBClusterIdentifier: String
    Force: Optional[BooleanOptional] = None
    UseEarliestTimeOnPointInTimeUnavailable: Optional[BooleanOptional] = None


class BlueGreenDeploymentTask(BaseModel):
    Name: Optional[BlueGreenDeploymentTaskName] = None
    Status: Optional[BlueGreenDeploymentTaskStatus] = None


class BlueGreenDeploymentTaskList(RootModel[List[BlueGreenDeploymentTask]]):
    root: List[BlueGreenDeploymentTask]


class CACertificateIdentifiersList(RootModel[List[String]]):
    root: List[String]


class CancelExportTaskMessage(BaseModel):
    ExportTaskIdentifier: String


class Certificate(BaseModel):
    CertificateArn: Optional[String] = None
    CertificateIdentifier: Optional[String] = None
    CertificateType: Optional[String] = None
    CustomerOverride: Optional[BooleanOptional] = None
    CustomerOverrideValidTill: Optional[TStamp] = None
    Thumbprint: Optional[String] = None
    ValidFrom: Optional[TStamp] = None
    ValidTill: Optional[TStamp] = None


class CertificateDetails(BaseModel):
    CAIdentifier: Optional[String] = None
    ValidTill: Optional[TStamp] = None


class CertificateList(RootModel[List[Certificate]]):
    root: List[Certificate]


class CertificateMessage(BaseModel):
    Certificates: Optional[CertificateList] = None
    Marker: Optional[String] = None


class CharacterSet(BaseModel):
    CharacterSetDescription: Optional[String] = None
    CharacterSetName: Optional[String] = None


class ConnectionPoolConfiguration(BaseModel):
    ConnectionBorrowTimeout: Optional[IntegerOptional] = None
    InitQuery: Optional[String] = None
    MaxConnectionsPercent: Optional[IntegerOptional] = None
    MaxIdleConnectionsPercent: Optional[IntegerOptional] = None
    SessionPinningFilters: Optional[StringList] = None


class ConnectionPoolConfigurationInfo(BaseModel):
    ConnectionBorrowTimeout: Optional[Integer] = None
    InitQuery: Optional[String] = None
    MaxConnectionsPercent: Optional[Integer] = None
    MaxIdleConnectionsPercent: Optional[Integer] = None
    SessionPinningFilters: Optional[StringList] = None


class CopyDBClusterParameterGroupMessage(BaseModel):
    SourceDBClusterParameterGroupIdentifier: String
    Tags: Optional[TagList] = None
    TargetDBClusterParameterGroupDescription: String
    TargetDBClusterParameterGroupIdentifier: String


class CopyDBClusterSnapshotMessage(BaseModel):
    CopyTags: Optional[BooleanOptional] = None
    KmsKeyId: Optional[String] = None
    PreSignedUrl: Optional[String] = None
    SourceDBClusterSnapshotIdentifier: String
    SourceRegion: Optional[String] = None
    Tags: Optional[TagList] = None
    TargetDBClusterSnapshotIdentifier: String


class CopyDBParameterGroupMessage(BaseModel):
    SourceDBParameterGroupIdentifier: String
    Tags: Optional[TagList] = None
    TargetDBParameterGroupDescription: String
    TargetDBParameterGroupIdentifier: String


class CopyDBSnapshotMessage(BaseModel):
    CopyOptionGroup: Optional[BooleanOptional] = None
    CopyTags: Optional[BooleanOptional] = None
    KmsKeyId: Optional[String] = None
    OptionGroupName: Optional[String] = None
    PreSignedUrl: Optional[String] = None
    SourceDBSnapshotIdentifier: String
    SourceRegion: Optional[String] = None
    Tags: Optional[TagList] = None
    TargetCustomAvailabilityZone: Optional[String] = None
    TargetDBSnapshotIdentifier: String


class CopyOptionGroupMessage(BaseModel):
    SourceOptionGroupIdentifier: String
    Tags: Optional[TagList] = None
    TargetOptionGroupDescription: String
    TargetOptionGroupIdentifier: String


class CreateBlueGreenDeploymentRequest(BaseModel):
    BlueGreenDeploymentName_1: BlueGreenDeploymentName = Field(
        ..., alias='BlueGreenDeploymentName'
    )
    Source: DatabaseArn
    Tags: Optional[TagList] = None
    TargetDBClusterParameterGroupName_1: Optional[TargetDBClusterParameterGroupName] = (
        Field(None, alias='TargetDBClusterParameterGroupName')
    )
    TargetDBParameterGroupName_1: Optional[TargetDBParameterGroupName] = Field(
        None, alias='TargetDBParameterGroupName'
    )
    TargetEngineVersion_1: Optional[TargetEngineVersion] = Field(
        None, alias='TargetEngineVersion'
    )


class CreateCustomDBEngineVersionMessage(BaseModel):
    DatabaseInstallationFilesS3BucketName: Optional[BucketName] = None
    DatabaseInstallationFilesS3Prefix: Optional[String255] = None
    Description_1: Optional[Description] = Field(None, alias='Description')
    Engine: CustomEngineName
    EngineVersion: CustomEngineVersion
    ImageId: Optional[String255] = None
    KMSKeyId: Optional[KmsKeyIdOrArn] = None
    Manifest: Optional[CustomDBEngineVersionManifest] = None
    Tags: Optional[TagList] = None


class CreateDBClusterEndpointMessage(BaseModel):
    DBClusterEndpointIdentifier: String
    DBClusterIdentifier: String
    EndpointType: String
    ExcludedMembers: Optional[StringList] = None
    StaticMembers: Optional[StringList] = None
    Tags: Optional[TagList] = None


class CreateDBClusterParameterGroupMessage(BaseModel):
    DBClusterParameterGroupName: String
    DBParameterGroupFamily: String
    Description: String
    Tags: Optional[TagList] = None


class CreateDBClusterSnapshotMessage(BaseModel):
    DBClusterIdentifier: String
    DBClusterSnapshotIdentifier: String
    Tags: Optional[TagList] = None


class CreateDBParameterGroupMessage(BaseModel):
    DBParameterGroupFamily: String
    DBParameterGroupName: String
    Description: String
    Tags: Optional[TagList] = None


class CreateDBProxyEndpointRequest(BaseModel):
    DBProxyEndpointName_1: DBProxyEndpointName = Field(..., alias='DBProxyEndpointName')
    DBProxyName_1: DBProxyName = Field(..., alias='DBProxyName')
    Tags: Optional[TagList] = None
    TargetRole: Optional[DBProxyEndpointTargetRole] = None
    VpcSecurityGroupIds: Optional[StringList] = None
    VpcSubnetIds: StringList


class CreateDBProxyRequest(BaseModel):
    Auth: UserAuthConfigList
    DBProxyName: String
    DebugLogging: Optional[Boolean] = None
    EngineFamily_1: EngineFamily = Field(..., alias='EngineFamily')
    IdleClientTimeout: Optional[IntegerOptional] = None
    RequireTLS: Optional[Boolean] = None
    RoleArn: String
    Tags: Optional[TagList] = None
    VpcSecurityGroupIds: Optional[StringList] = None
    VpcSubnetIds: StringList


class CreateDBSecurityGroupMessage(BaseModel):
    DBSecurityGroupDescription: String
    DBSecurityGroupName: String
    Tags: Optional[TagList] = None


class CreateDBSnapshotMessage(BaseModel):
    DBInstanceIdentifier: String
    DBSnapshotIdentifier: String
    Tags: Optional[TagList] = None


class CreateDBSubnetGroupMessage(BaseModel):
    DBSubnetGroupDescription: String
    DBSubnetGroupName: String
    SubnetIds: SubnetIdentifierList
    Tags: Optional[TagList] = None


class CreateGlobalClusterMessage(BaseModel):
    DatabaseName: Optional[String] = None
    DeletionProtection: Optional[BooleanOptional] = None
    Engine: Optional[String] = None
    EngineVersion: Optional[String] = None
    GlobalClusterIdentifier: Optional[String] = None
    SourceDBClusterIdentifier: Optional[String] = None
    StorageEncrypted: Optional[BooleanOptional] = None


class CreateOptionGroupMessage(BaseModel):
    EngineName: String
    MajorEngineVersion: String
    OptionGroupDescription: String
    OptionGroupName: String
    Tags: Optional[TagList] = None


class CustomDBEngineVersionAMI(BaseModel):
    ImageId: Optional[String] = None
    Status: Optional[String] = None


class DBClusterBacktrack(BaseModel):
    BacktrackIdentifier: Optional[String] = None
    BacktrackRequestCreationTime: Optional[TStamp] = None
    BacktrackTo: Optional[TStamp] = None
    BacktrackedFrom: Optional[TStamp] = None
    DBClusterIdentifier: Optional[String] = None
    Status: Optional[String] = None


class DBClusterBacktrackList(RootModel[List[DBClusterBacktrack]]):
    root: List[DBClusterBacktrack]


class DBClusterBacktrackMessage(BaseModel):
    DBClusterBacktracks: Optional[DBClusterBacktrackList] = None
    Marker: Optional[String] = None


class DBClusterCapacityInfo(BaseModel):
    CurrentCapacity: Optional[IntegerOptional] = None
    DBClusterIdentifier: Optional[String] = None
    PendingCapacity: Optional[IntegerOptional] = None
    SecondsBeforeTimeout: Optional[IntegerOptional] = None
    TimeoutAction: Optional[String] = None


class DBClusterEndpoint(BaseModel):
    CustomEndpointType: Optional[String] = None
    DBClusterEndpointArn: Optional[String] = None
    DBClusterEndpointIdentifier: Optional[String] = None
    DBClusterEndpointResourceIdentifier: Optional[String] = None
    DBClusterIdentifier: Optional[String] = None
    Endpoint: Optional[String] = None
    EndpointType: Optional[String] = None
    ExcludedMembers: Optional[StringList] = None
    StaticMembers: Optional[StringList] = None
    Status: Optional[String] = None


class DBClusterEndpointList(RootModel[List[DBClusterEndpoint]]):
    root: List[DBClusterEndpoint]


class DBClusterEndpointMessage(BaseModel):
    DBClusterEndpoints: Optional[DBClusterEndpointList] = None
    Marker: Optional[String] = None


class DBClusterMember(BaseModel):
    DBClusterParameterGroupStatus: Optional[String] = None
    DBInstanceIdentifier: Optional[String] = None
    IsClusterWriter: Optional[Boolean] = None
    PromotionTier: Optional[IntegerOptional] = None


class DBClusterMemberList(RootModel[List[DBClusterMember]]):
    root: List[DBClusterMember]


class DBClusterOptionGroupStatus(BaseModel):
    DBClusterOptionGroupName: Optional[String] = None
    Status: Optional[String] = None


class DBClusterParameterGroup(BaseModel):
    DBClusterParameterGroupArn: Optional[String] = None
    DBClusterParameterGroupName: Optional[String] = None
    DBParameterGroupFamily: Optional[String] = None
    Description: Optional[String] = None


class DBClusterParameterGroupList(RootModel[List[DBClusterParameterGroup]]):
    root: List[DBClusterParameterGroup]


class DBClusterParameterGroupNameMessage(BaseModel):
    DBClusterParameterGroupName: Optional[String] = None


class DBClusterParameterGroupsMessage(BaseModel):
    DBClusterParameterGroups: Optional[DBClusterParameterGroupList] = None
    Marker: Optional[String] = None


class DBClusterRole(BaseModel):
    FeatureName: Optional[String] = None
    RoleArn: Optional[String] = None
    Status: Optional[String] = None


class DBClusterRoles(RootModel[List[DBClusterRole]]):
    root: List[DBClusterRole]


class DBClusterSnapshot(BaseModel):
    AllocatedStorage: Optional[Integer] = None
    AvailabilityZones_1: Optional[AvailabilityZones] = Field(
        None, alias='AvailabilityZones'
    )
    ClusterCreateTime: Optional[TStamp] = None
    DBClusterIdentifier: Optional[String] = None
    DBClusterSnapshotArn: Optional[String] = None
    DBClusterSnapshotIdentifier: Optional[String] = None
    DBSystemId: Optional[String] = None
    Engine: Optional[String] = None
    EngineMode: Optional[String] = None
    EngineVersion: Optional[String] = None
    IAMDatabaseAuthenticationEnabled: Optional[Boolean] = None
    KmsKeyId: Optional[String] = None
    LicenseModel: Optional[String] = None
    MasterUsername: Optional[String] = None
    PercentProgress: Optional[Integer] = None
    Port: Optional[Integer] = None
    SnapshotCreateTime: Optional[TStamp] = None
    SnapshotType: Optional[String] = None
    SourceDBClusterSnapshotArn: Optional[String] = None
    Status: Optional[String] = None
    StorageEncrypted: Optional[Boolean] = None
    TagList_1: Optional[TagList] = Field(None, alias='TagList')
    VpcId: Optional[String] = None


class DBClusterSnapshotAttribute(BaseModel):
    AttributeName: Optional[String] = None
    AttributeValues: Optional[AttributeValueList] = None


class DBClusterSnapshotAttributeList(RootModel[List[DBClusterSnapshotAttribute]]):
    root: List[DBClusterSnapshotAttribute]


class DBClusterSnapshotAttributesResult(BaseModel):
    DBClusterSnapshotAttributes: Optional[DBClusterSnapshotAttributeList] = None
    DBClusterSnapshotIdentifier: Optional[String] = None


class DBClusterSnapshotList(RootModel[List[DBClusterSnapshot]]):
    root: List[DBClusterSnapshot]


class DBClusterSnapshotMessage(BaseModel):
    DBClusterSnapshots: Optional[DBClusterSnapshotList] = None
    Marker: Optional[String] = None


class DBInstanceAutomatedBackupsReplication(BaseModel):
    DBInstanceAutomatedBackupsArn: Optional[String] = None


class DBInstanceAutomatedBackupsReplicationList(
    RootModel[List[DBInstanceAutomatedBackupsReplication]]
):
    root: List[DBInstanceAutomatedBackupsReplication]


class DBInstanceRole(BaseModel):
    FeatureName: Optional[String] = None
    RoleArn: Optional[String] = None
    Status: Optional[String] = None


class DBInstanceRoles(RootModel[List[DBInstanceRole]]):
    root: List[DBInstanceRole]


class DBInstanceStatusInfo(BaseModel):
    Message: Optional[String] = None
    Normal: Optional[Boolean] = None
    Status: Optional[String] = None
    StatusType: Optional[String] = None


class DBInstanceStatusInfoList(RootModel[List[DBInstanceStatusInfo]]):
    root: List[DBInstanceStatusInfo]


class DBParameterGroup(BaseModel):
    DBParameterGroupArn: Optional[String] = None
    DBParameterGroupFamily: Optional[String] = None
    DBParameterGroupName: Optional[String] = None
    Description: Optional[String] = None


class DBParameterGroupList(RootModel[List[DBParameterGroup]]):
    root: List[DBParameterGroup]


class DBParameterGroupNameMessage(BaseModel):
    DBParameterGroupName: Optional[String] = None


class DBParameterGroupStatus(BaseModel):
    DBParameterGroupName: Optional[String] = None
    ParameterApplyStatus: Optional[String] = None


class DBParameterGroupStatusList(RootModel[List[DBParameterGroupStatus]]):
    root: List[DBParameterGroupStatus]


class DBParameterGroupsMessage(BaseModel):
    DBParameterGroups: Optional[DBParameterGroupList] = None
    Marker: Optional[String] = None


class DBProxy(BaseModel):
    Auth: Optional[UserAuthConfigInfoList] = None
    CreatedDate: Optional[TStamp] = None
    DBProxyArn: Optional[String] = None
    DBProxyName: Optional[String] = None
    DebugLogging: Optional[Boolean] = None
    Endpoint: Optional[String] = None
    EngineFamily: Optional[String] = None
    IdleClientTimeout: Optional[Integer] = None
    RequireTLS: Optional[Boolean] = None
    RoleArn: Optional[String] = None
    Status: Optional[DBProxyStatus] = None
    UpdatedDate: Optional[TStamp] = None
    VpcId: Optional[String] = None
    VpcSecurityGroupIds: Optional[StringList] = None
    VpcSubnetIds: Optional[StringList] = None


class DBProxyEndpoint(BaseModel):
    CreatedDate: Optional[TStamp] = None
    DBProxyEndpointArn: Optional[String] = None
    DBProxyEndpointName: Optional[String] = None
    DBProxyName: Optional[String] = None
    Endpoint: Optional[String] = None
    IsDefault: Optional[Boolean] = None
    Status: Optional[DBProxyEndpointStatus] = None
    TargetRole: Optional[DBProxyEndpointTargetRole] = None
    VpcId: Optional[String] = None
    VpcSecurityGroupIds: Optional[StringList] = None
    VpcSubnetIds: Optional[StringList] = None


class DBProxyEndpointList(RootModel[List[DBProxyEndpoint]]):
    root: List[DBProxyEndpoint]


class DBProxyList(RootModel[List[DBProxy]]):
    root: List[DBProxy]


class DBProxyTargetGroup(BaseModel):
    ConnectionPoolConfig: Optional[ConnectionPoolConfigurationInfo] = None
    CreatedDate: Optional[TStamp] = None
    DBProxyName: Optional[String] = None
    IsDefault: Optional[Boolean] = None
    Status: Optional[String] = None
    TargetGroupArn: Optional[String] = None
    TargetGroupName: Optional[String] = None
    UpdatedDate: Optional[TStamp] = None


class DBSecurityGroupMembership(BaseModel):
    DBSecurityGroupName: Optional[String] = None
    Status: Optional[String] = None


class DBSecurityGroupMembershipList(RootModel[List[DBSecurityGroupMembership]]):
    root: List[DBSecurityGroupMembership]


class DBSecurityGroupNameList(RootModel[List[String]]):
    root: List[String]


class DBSnapshotAttribute(BaseModel):
    AttributeName: Optional[String] = None
    AttributeValues: Optional[AttributeValueList] = None


class DBSnapshotAttributeList(RootModel[List[DBSnapshotAttribute]]):
    root: List[DBSnapshotAttribute]


class DBSnapshotAttributesResult(BaseModel):
    DBSnapshotAttributes: Optional[DBSnapshotAttributeList] = None
    DBSnapshotIdentifier: Optional[String] = None


class DeleteDBClusterEndpointMessage(BaseModel):
    DBClusterEndpointIdentifier: String


class DeleteDBClusterMessage(BaseModel):
    DBClusterIdentifier: String
    FinalDBSnapshotIdentifier: Optional[String] = None
    SkipFinalSnapshot: Optional[Boolean] = None


class DeleteDBClusterParameterGroupMessage(BaseModel):
    DBClusterParameterGroupName: String


class DeleteDBClusterSnapshotMessage(BaseModel):
    DBClusterSnapshotIdentifier: String


class DeleteDBClusterSnapshotResult(BaseModel):
    DBClusterSnapshot_1: Optional[DBClusterSnapshot] = Field(
        None, alias='DBClusterSnapshot'
    )


class DeleteDBInstanceAutomatedBackupMessage(BaseModel):
    DBInstanceAutomatedBackupsArn: Optional[String] = None
    DbiResourceId: Optional[String] = None


class DeleteDBInstanceMessage(BaseModel):
    DBInstanceIdentifier: String
    DeleteAutomatedBackups: Optional[BooleanOptional] = None
    FinalDBSnapshotIdentifier: Optional[String] = None
    SkipFinalSnapshot: Optional[Boolean] = None


class DeleteDBParameterGroupMessage(BaseModel):
    DBParameterGroupName: String


class DeleteDBProxyEndpointResponse(BaseModel):
    DBProxyEndpoint_1: Optional[DBProxyEndpoint] = Field(None, alias='DBProxyEndpoint')


class DeleteDBProxyRequest(BaseModel):
    DBProxyName: String


class DeleteDBProxyResponse(BaseModel):
    DBProxy_1: Optional[DBProxy] = Field(None, alias='DBProxy')


class DeleteDBSecurityGroupMessage(BaseModel):
    DBSecurityGroupName: String


class DeleteDBSnapshotMessage(BaseModel):
    DBSnapshotIdentifier: String


class DeleteDBSubnetGroupMessage(BaseModel):
    DBSubnetGroupName: String


class DeleteEventSubscriptionMessage(BaseModel):
    SubscriptionName: String


class DeleteGlobalClusterMessage(BaseModel):
    GlobalClusterIdentifier: String


class DeleteOptionGroupMessage(BaseModel):
    OptionGroupName: String


class DeregisterDBProxyTargetsRequest(BaseModel):
    DBClusterIdentifiers: Optional[StringList] = None
    DBInstanceIdentifiers: Optional[StringList] = None
    DBProxyName: String
    TargetGroupName: Optional[String] = None


class DescribeDBClusterSnapshotAttributesMessage(BaseModel):
    DBClusterSnapshotIdentifier: String


class DescribeDBClusterSnapshotAttributesResult(BaseModel):
    DBClusterSnapshotAttributesResult_1: Optional[DBClusterSnapshotAttributesResult] = (
        Field(None, alias='DBClusterSnapshotAttributesResult')
    )


class DescribeDBLogFilesDetails(BaseModel):
    LastWritten: Optional[Long] = None
    LogFileName: Optional[String] = None
    Size: Optional[Long] = None


class DescribeDBLogFilesList(RootModel[List[DescribeDBLogFilesDetails]]):
    root: List[DescribeDBLogFilesDetails]


class DescribeDBLogFilesResponse(BaseModel):
    DescribeDBLogFiles: Optional[DescribeDBLogFilesList] = None
    Marker: Optional[String] = None


class DescribeDBProxiesResponse(BaseModel):
    DBProxies: Optional[DBProxyList] = None
    Marker: Optional[String] = None


class DescribeDBProxyEndpointsResponse(BaseModel):
    DBProxyEndpoints: Optional[DBProxyEndpointList] = None
    Marker: Optional[String] = None


class DescribeDBSnapshotAttributesMessage(BaseModel):
    DBSnapshotIdentifier: String


class DescribeDBSnapshotAttributesResult(BaseModel):
    DBSnapshotAttributesResult_1: Optional[DBSnapshotAttributesResult] = Field(
        None, alias='DBSnapshotAttributesResult'
    )


class DescribeValidDBInstanceModificationsMessage(BaseModel):
    DBInstanceIdentifier: String


class DomainMembership(BaseModel):
    Domain: Optional[String] = None
    FQDN: Optional[String] = None
    IAMRoleName: Optional[String] = None
    Status: Optional[String] = None


class DomainMembershipList(RootModel[List[DomainMembership]]):
    root: List[DomainMembership]


class DownloadDBLogFilePortionDetails(BaseModel):
    AdditionalDataPending: Optional[Boolean] = None
    LogFileData: Optional[String] = None
    Marker: Optional[String] = None


class DownloadDBLogFilePortionMessage(BaseModel):
    DBInstanceIdentifier: String
    LogFileName: String
    Marker: Optional[String] = None
    NumberOfLines: Optional[Integer] = None


class EC2SecurityGroup(BaseModel):
    EC2SecurityGroupId: Optional[String] = None
    EC2SecurityGroupName: Optional[String] = None
    EC2SecurityGroupOwnerId: Optional[String] = None
    Status: Optional[String] = None


class EC2SecurityGroupList(RootModel[List[EC2SecurityGroup]]):
    root: List[EC2SecurityGroup]


class Endpoint(BaseModel):
    Address: Optional[String] = None
    HostedZoneId: Optional[String] = None
    Port: Optional[Integer] = None


class EngineModeList(RootModel[List[String]]):
    root: List[String]


class EventCategoriesList(RootModel[List[String]]):
    root: List[String]


class EventCategoriesMap(BaseModel):
    EventCategories: Optional[EventCategoriesList] = None
    SourceType: Optional[String] = None


class EventCategoriesMapList(RootModel[List[EventCategoriesMap]]):
    root: List[EventCategoriesMap]


class EventCategoriesMessage(BaseModel):
    EventCategoriesMapList_1: Optional[EventCategoriesMapList] = Field(
        None, alias='EventCategoriesMapList'
    )


class ExportTask(BaseModel):
    ExportOnly: Optional[StringList] = None
    ExportTaskIdentifier: Optional[String] = None
    FailureCause: Optional[String] = None
    IamRoleArn: Optional[String] = None
    KmsKeyId: Optional[String] = None
    PercentProgress: Optional[Integer] = None
    S3Bucket: Optional[String] = None
    S3Prefix: Optional[String] = None
    SnapshotTime: Optional[TStamp] = None
    SourceArn: Optional[String] = None
    SourceType: Optional[ExportSourceType] = None
    Status: Optional[String] = None
    TaskEndTime: Optional[TStamp] = None
    TaskStartTime: Optional[TStamp] = None
    TotalExtractedDataInGB: Optional[Integer] = None
    WarningMessage: Optional[String] = None


class ExportTasksList(RootModel[List[ExportTask]]):
    root: List[ExportTask]


class ExportTasksMessage(BaseModel):
    ExportTasks: Optional[ExportTasksList] = None
    Marker: Optional[String] = None


class FailoverDBClusterMessage(BaseModel):
    DBClusterIdentifier: String
    TargetDBInstanceIdentifier: Optional[String] = None


class FailoverGlobalClusterMessage(BaseModel):
    GlobalClusterIdentifier_1: GlobalClusterIdentifier = Field(
        ..., alias='GlobalClusterIdentifier'
    )
    TargetDbClusterIdentifier: DBClusterIdentifier


class FailoverState(BaseModel):
    FromDbClusterArn: Optional[String] = None
    Status: Optional[FailoverStatus] = None
    ToDbClusterArn: Optional[String] = None


class FeatureNameList(RootModel[List[String]]):
    root: List[String]


class FilterValueList(RootModel[List[String]]):
    root: List[String]


class IPRange(BaseModel):
    CIDRIP: Optional[String] = None
    Status: Optional[String] = None


class IPRangeList(RootModel[List[IPRange]]):
    root: List[IPRange]


class KeyList(RootModel[List[String]]):
    root: List[String]


class LogTypeList(RootModel[List[String]]):
    root: List[String]


class MasterUserSecret(BaseModel):
    KmsKeyId: Optional[String] = None
    SecretArn: Optional[String] = None
    SecretStatus: Optional[String] = None


class MinimumEngineVersionPerAllowedValue(BaseModel):
    AllowedValue: Optional[String] = None
    MinimumEngineVersion: Optional[String] = None


class MinimumEngineVersionPerAllowedValueList(
    RootModel[List[MinimumEngineVersionPerAllowedValue]]
):
    root: List[MinimumEngineVersionPerAllowedValue]


class ModifyActivityStreamRequest(BaseModel):
    AuditPolicyState_1: Optional[AuditPolicyState] = Field(
        None, alias='AuditPolicyState'
    )
    ResourceArn: Optional[String] = None


class ModifyActivityStreamResponse(BaseModel):
    EngineNativeAuditFieldsIncluded: Optional[BooleanOptional] = None
    KinesisStreamName: Optional[String] = None
    KmsKeyId: Optional[String] = None
    Mode: Optional[ActivityStreamMode] = None
    PolicyStatus: Optional[ActivityStreamPolicyStatus] = None
    Status: Optional[ActivityStreamStatus] = None


class ModifyCertificatesMessage(BaseModel):
    CertificateIdentifier: Optional[String] = None
    RemoveCustomerOverride: Optional[BooleanOptional] = None


class ModifyCertificatesResult(BaseModel):
    Certificate_1: Optional[Certificate] = Field(None, alias='Certificate')


class ModifyCurrentDBClusterCapacityMessage(BaseModel):
    Capacity: Optional[IntegerOptional] = None
    DBClusterIdentifier: String
    SecondsBeforeTimeout: Optional[IntegerOptional] = None
    TimeoutAction: Optional[String] = None


class ModifyDBClusterEndpointMessage(BaseModel):
    DBClusterEndpointIdentifier: String
    EndpointType: Optional[String] = None
    ExcludedMembers: Optional[StringList] = None
    StaticMembers: Optional[StringList] = None


class ModifyDBClusterSnapshotAttributeMessage(BaseModel):
    AttributeName: String
    DBClusterSnapshotIdentifier: String
    ValuesToAdd: Optional[AttributeValueList] = None
    ValuesToRemove: Optional[AttributeValueList] = None


class ModifyDBClusterSnapshotAttributeResult(BaseModel):
    DBClusterSnapshotAttributesResult_1: Optional[DBClusterSnapshotAttributesResult] = (
        Field(None, alias='DBClusterSnapshotAttributesResult')
    )


class ModifyDBProxyEndpointRequest(BaseModel):
    DBProxyEndpointName_1: DBProxyEndpointName = Field(..., alias='DBProxyEndpointName')
    NewDBProxyEndpointName: Optional[DBProxyEndpointName] = None
    VpcSecurityGroupIds: Optional[StringList] = None


class ModifyDBProxyEndpointResponse(BaseModel):
    DBProxyEndpoint_1: Optional[DBProxyEndpoint] = Field(None, alias='DBProxyEndpoint')


class ModifyDBProxyRequest(BaseModel):
    Auth: Optional[UserAuthConfigList] = None
    DBProxyName: String
    DebugLogging: Optional[BooleanOptional] = None
    IdleClientTimeout: Optional[IntegerOptional] = None
    NewDBProxyName: Optional[String] = None
    RequireTLS: Optional[BooleanOptional] = None
    RoleArn: Optional[String] = None
    SecurityGroups: Optional[StringList] = None


class ModifyDBProxyResponse(BaseModel):
    DBProxy_1: Optional[DBProxy] = Field(None, alias='DBProxy')


class ModifyDBProxyTargetGroupRequest(BaseModel):
    ConnectionPoolConfig: Optional[ConnectionPoolConfiguration] = None
    DBProxyName: String
    NewName: Optional[String] = None
    TargetGroupName: String


class ModifyDBProxyTargetGroupResponse(BaseModel):
    DBProxyTargetGroup_1: Optional[DBProxyTargetGroup] = Field(
        None, alias='DBProxyTargetGroup'
    )


class ModifyDBSnapshotAttributeMessage(BaseModel):
    AttributeName: String
    DBSnapshotIdentifier: String
    ValuesToAdd: Optional[AttributeValueList] = None
    ValuesToRemove: Optional[AttributeValueList] = None


class ModifyDBSnapshotAttributeResult(BaseModel):
    DBSnapshotAttributesResult_1: Optional[DBSnapshotAttributesResult] = Field(
        None, alias='DBSnapshotAttributesResult'
    )


class ModifyDBSnapshotMessage(BaseModel):
    DBSnapshotIdentifier: String
    EngineVersion: Optional[String] = None
    OptionGroupName: Optional[String] = None


class ModifyDBSubnetGroupMessage(BaseModel):
    DBSubnetGroupDescription: Optional[String] = None
    DBSubnetGroupName: String
    SubnetIds: SubnetIdentifierList


class ModifyEventSubscriptionMessage(BaseModel):
    Enabled: Optional[BooleanOptional] = None
    EventCategories: Optional[EventCategoriesList] = None
    SnsTopicArn: Optional[String] = None
    SourceType: Optional[String] = None
    SubscriptionName: String


class ModifyGlobalClusterMessage(BaseModel):
    AllowMajorVersionUpgrade: Optional[BooleanOptional] = None
    DeletionProtection: Optional[BooleanOptional] = None
    EngineVersion: Optional[String] = None
    GlobalClusterIdentifier: Optional[String] = None
    NewGlobalClusterIdentifier: Optional[String] = None


class OptionGroupMembership(BaseModel):
    OptionGroupName: Optional[String] = None
    Status: Optional[String] = None


class OptionGroupMembershipList(RootModel[List[OptionGroupMembership]]):
    root: List[OptionGroupMembership]


class OptionGroupOptionSetting(BaseModel):
    AllowedValues: Optional[String] = None
    ApplyType: Optional[String] = None
    DefaultValue: Optional[String] = None
    IsModifiable: Optional[Boolean] = None
    IsRequired: Optional[Boolean] = None
    MinimumEngineVersionPerAllowedValue: Optional[
        MinimumEngineVersionPerAllowedValueList
    ] = None
    SettingDescription: Optional[String] = None
    SettingName: Optional[String] = None


class OptionGroupOptionSettingsList(RootModel[List[OptionGroupOptionSetting]]):
    root: List[OptionGroupOptionSetting]


class OptionNamesList(RootModel[List[String]]):
    root: List[String]


class OptionSetting(BaseModel):
    AllowedValues: Optional[String] = None
    ApplyType: Optional[String] = None
    DataType: Optional[String] = None
    DefaultValue: Optional[String] = None
    Description: Optional[String] = None
    IsCollection: Optional[Boolean] = None
    IsModifiable: Optional[Boolean] = None
    Name: Optional[String] = None
    Value: Optional[String] = None


class OptionSettingConfigurationList(RootModel[List[OptionSetting]]):
    root: List[OptionSetting]


class OptionSettingsList(RootModel[List[OptionSetting]]):
    root: List[OptionSetting]


class OptionVersion(BaseModel):
    IsDefault: Optional[Boolean] = None
    Version: Optional[String] = None


class OptionsConflictsWith(RootModel[List[String]]):
    root: List[String]


class OptionsDependedOn(RootModel[List[String]]):
    root: List[String]


class OrderableDBInstanceOption(BaseModel):
    AvailabilityZoneGroup: Optional[String] = None
    AvailabilityZones: Optional[AvailabilityZoneList] = None
    AvailableProcessorFeatures: Optional[AvailableProcessorFeatureList] = None
    DBInstanceClass: Optional[String] = None
    Engine: Optional[String] = None
    EngineVersion: Optional[String] = None
    LicenseModel: Optional[String] = None
    MaxIopsPerDbInstance: Optional[IntegerOptional] = None
    MaxIopsPerGib: Optional[DoubleOptional] = None
    MaxStorageSize: Optional[IntegerOptional] = None
    MaxStorageThroughputPerDbInstance: Optional[IntegerOptional] = None
    MaxStorageThroughputPerIops: Optional[DoubleOptional] = None
    MinIopsPerDbInstance: Optional[IntegerOptional] = None
    MinIopsPerGib: Optional[DoubleOptional] = None
    MinStorageSize: Optional[IntegerOptional] = None
    MinStorageThroughputPerDbInstance: Optional[IntegerOptional] = None
    MinStorageThroughputPerIops: Optional[DoubleOptional] = None
    MultiAZCapable: Optional[Boolean] = None
    OutpostCapable: Optional[Boolean] = None
    ReadReplicaCapable: Optional[Boolean] = None
    StorageType: Optional[String] = None
    SupportedActivityStreamModes: Optional[ActivityStreamModeList] = None
    SupportedEngineModes: Optional[EngineModeList] = None
    SupportedNetworkTypes: Optional[StringList] = None
    SupportsClusters: Optional[Boolean] = None
    SupportsEnhancedMonitoring: Optional[Boolean] = None
    SupportsGlobalDatabases: Optional[Boolean] = None
    SupportsIAMDatabaseAuthentication: Optional[Boolean] = None
    SupportsIops: Optional[Boolean] = None
    SupportsKerberosAuthentication: Optional[BooleanOptional] = None
    SupportsPerformanceInsights: Optional[Boolean] = None
    SupportsStorageAutoscaling: Optional[BooleanOptional] = None
    SupportsStorageEncryption: Optional[Boolean] = None
    SupportsStorageThroughput: Optional[Boolean] = None
    Vpc: Optional[Boolean] = None


class OrderableDBInstanceOptionsList(RootModel[List[OrderableDBInstanceOption]]):
    root: List[OrderableDBInstanceOption]


class OrderableDBInstanceOptionsMessage(BaseModel):
    Marker: Optional[String] = None
    OrderableDBInstanceOptions: Optional[OrderableDBInstanceOptionsList] = None


class Outpost(BaseModel):
    Arn: Optional[String] = None


class Parameter(BaseModel):
    AllowedValues: Optional[String] = None
    ApplyMethod_1: Optional[ApplyMethod] = Field(None, alias='ApplyMethod')
    ApplyType: Optional[String] = None
    DataType: Optional[String] = None
    Description: Optional[String] = None
    IsModifiable: Optional[Boolean] = None
    MinimumEngineVersion: Optional[String] = None
    ParameterName: Optional[String] = None
    ParameterValue: Optional[String] = None
    Source: Optional[String] = None
    SupportedEngineModes: Optional[EngineModeList] = None


class ParametersList(RootModel[List[Parameter]]):
    root: List[Parameter]


class PendingCloudwatchLogsExports(BaseModel):
    LogTypesToDisable: Optional[LogTypeList] = None
    LogTypesToEnable: Optional[LogTypeList] = None


class PendingMaintenanceAction(BaseModel):
    Action: Optional[String] = None
    AutoAppliedAfterDate: Optional[TStamp] = None
    CurrentApplyDate: Optional[TStamp] = None
    Description: Optional[String] = None
    ForcedApplyDate: Optional[TStamp] = None
    OptInStatus: Optional[String] = None


class PendingMaintenanceActionDetails(RootModel[List[PendingMaintenanceAction]]):
    root: List[PendingMaintenanceAction]


class ProcessorFeature(BaseModel):
    Name: Optional[String] = None
    Value: Optional[String] = None


class ProcessorFeatureList(RootModel[List[ProcessorFeature]]):
    root: List[ProcessorFeature]


class PromoteReadReplicaDBClusterMessage(BaseModel):
    DBClusterIdentifier: String


class PromoteReadReplicaMessage(BaseModel):
    BackupRetentionPeriod: Optional[IntegerOptional] = None
    DBInstanceIdentifier: String
    PreferredBackupWindow: Optional[String] = None


class PurchaseReservedDBInstancesOfferingMessage(BaseModel):
    DBInstanceCount: Optional[IntegerOptional] = None
    ReservedDBInstanceId: Optional[String] = None
    ReservedDBInstancesOfferingId: String
    Tags: Optional[TagList] = None


class ReadReplicaDBClusterIdentifierList(RootModel[List[String]]):
    root: List[String]


class ReadReplicaDBInstanceIdentifierList(RootModel[List[String]]):
    root: List[String]


class ReadReplicaIdentifierList(RootModel[List[String]]):
    root: List[String]


class ReadersArnList(RootModel[List[String]]):
    root: List[String]


class RebootDBClusterMessage(BaseModel):
    DBClusterIdentifier: String


class RebootDBInstanceMessage(BaseModel):
    DBInstanceIdentifier: String
    ForceFailover: Optional[BooleanOptional] = None


class RecurringCharge(BaseModel):
    RecurringChargeAmount: Optional[Double] = None
    RecurringChargeFrequency: Optional[String] = None


class RecurringChargeList(RootModel[List[RecurringCharge]]):
    root: List[RecurringCharge]


class RegisterDBProxyTargetsRequest(BaseModel):
    DBClusterIdentifiers: Optional[StringList] = None
    DBInstanceIdentifiers: Optional[StringList] = None
    DBProxyName: String
    TargetGroupName: Optional[String] = None


class RemoveFromGlobalClusterMessage(BaseModel):
    DbClusterIdentifier: Optional[String] = None
    GlobalClusterIdentifier: Optional[String] = None


class RemoveRoleFromDBClusterMessage(BaseModel):
    DBClusterIdentifier: String
    FeatureName: Optional[String] = None
    RoleArn: String


class RemoveRoleFromDBInstanceMessage(BaseModel):
    DBInstanceIdentifier: String
    FeatureName: String
    RoleArn: String


class RemoveSourceIdentifierFromSubscriptionMessage(BaseModel):
    SourceIdentifier: String
    SubscriptionName: String


class RemoveTagsFromResourceMessage(BaseModel):
    ResourceName: String
    TagKeys: KeyList


class ReservedDBInstance(BaseModel):
    CurrencyCode: Optional[String] = None
    DBInstanceClass: Optional[String] = None
    DBInstanceCount: Optional[Integer] = None
    Duration: Optional[Integer] = None
    FixedPrice: Optional[Double] = None
    LeaseId: Optional[String] = None
    MultiAZ: Optional[Boolean] = None
    OfferingType: Optional[String] = None
    ProductDescription: Optional[String] = None
    RecurringCharges: Optional[RecurringChargeList] = None
    ReservedDBInstanceArn: Optional[String] = None
    ReservedDBInstanceId: Optional[String] = None
    ReservedDBInstancesOfferingId: Optional[String] = None
    StartTime: Optional[TStamp] = None
    State: Optional[String] = None
    UsagePrice: Optional[Double] = None


class ReservedDBInstanceList(RootModel[List[ReservedDBInstance]]):
    root: List[ReservedDBInstance]


class ReservedDBInstanceMessage(BaseModel):
    Marker: Optional[String] = None
    ReservedDBInstances: Optional[ReservedDBInstanceList] = None


class ReservedDBInstancesOffering(BaseModel):
    CurrencyCode: Optional[String] = None
    DBInstanceClass: Optional[String] = None
    Duration: Optional[Integer] = None
    FixedPrice: Optional[Double] = None
    MultiAZ: Optional[Boolean] = None
    OfferingType: Optional[String] = None
    ProductDescription: Optional[String] = None
    RecurringCharges: Optional[RecurringChargeList] = None
    ReservedDBInstancesOfferingId: Optional[String] = None
    UsagePrice: Optional[Double] = None


class ReservedDBInstancesOfferingList(RootModel[List[ReservedDBInstancesOffering]]):
    root: List[ReservedDBInstancesOffering]


class ReservedDBInstancesOfferingMessage(BaseModel):
    Marker: Optional[String] = None
    ReservedDBInstancesOfferings: Optional[ReservedDBInstancesOfferingList] = None


class ResetDBClusterParameterGroupMessage(BaseModel):
    DBClusterParameterGroupName: String
    Parameters: Optional[ParametersList] = None
    ResetAllParameters: Optional[Boolean] = None


class ResetDBParameterGroupMessage(BaseModel):
    DBParameterGroupName: String
    Parameters: Optional[ParametersList] = None
    ResetAllParameters: Optional[Boolean] = None


class ResourcePendingMaintenanceActions(BaseModel):
    PendingMaintenanceActionDetails_1: Optional[PendingMaintenanceActionDetails] = (
        Field(None, alias='PendingMaintenanceActionDetails')
    )
    ResourceIdentifier: Optional[String] = None


class RestoreDBClusterFromS3Message(BaseModel):
    AvailabilityZones_1: Optional[AvailabilityZones] = Field(
        None, alias='AvailabilityZones'
    )
    BacktrackWindow: Optional[LongOptional] = None
    BackupRetentionPeriod: Optional[IntegerOptional] = None
    CharacterSetName: Optional[String] = None
    CopyTagsToSnapshot: Optional[BooleanOptional] = None
    DBClusterIdentifier: String
    DBClusterParameterGroupName: Optional[String] = None
    DBSubnetGroupName: Optional[String] = None
    DatabaseName: Optional[String] = None
    DeletionProtection: Optional[BooleanOptional] = None
    Domain: Optional[String] = None
    DomainIAMRoleName: Optional[String] = None
    EnableCloudwatchLogsExports: Optional[LogTypeList] = None
    EnableIAMDatabaseAuthentication: Optional[BooleanOptional] = None
    Engine: String
    EngineVersion: Optional[String] = None
    KmsKeyId: Optional[String] = None
    ManageMasterUserPassword: Optional[BooleanOptional] = None
    MasterUserPassword: Optional[String] = None
    MasterUserSecretKmsKeyId: Optional[String] = None
    MasterUsername: String
    NetworkType: Optional[String] = None
    OptionGroupName: Optional[String] = None
    Port: Optional[IntegerOptional] = None
    PreferredBackupWindow: Optional[String] = None
    PreferredMaintenanceWindow: Optional[String] = None
    S3BucketName: String
    S3IngestionRoleArn: String
    S3Prefix: Optional[String] = None
    ServerlessV2ScalingConfiguration_1: Optional[ServerlessV2ScalingConfiguration] = (
        Field(None, alias='ServerlessV2ScalingConfiguration')
    )
    SourceEngine: String
    SourceEngineVersion: String
    StorageEncrypted: Optional[BooleanOptional] = None
    Tags: Optional[TagList] = None
    VpcSecurityGroupIds: Optional[VpcSecurityGroupIdList] = None


class RestoreDBInstanceFromDBSnapshotMessage(BaseModel):
    AllocatedStorage: Optional[IntegerOptional] = None
    AutoMinorVersionUpgrade: Optional[BooleanOptional] = None
    AvailabilityZone: Optional[String] = None
    BackupTarget: Optional[String] = None
    CopyTagsToSnapshot: Optional[BooleanOptional] = None
    CustomIamInstanceProfile: Optional[String] = None
    DBClusterSnapshotIdentifier: Optional[String] = None
    DBInstanceClass: Optional[String] = None
    DBInstanceIdentifier: String
    DBName: Optional[String] = None
    DBParameterGroupName: Optional[String] = None
    DBSnapshotIdentifier: Optional[String] = None
    DBSubnetGroupName: Optional[String] = None
    DeletionProtection: Optional[BooleanOptional] = None
    Domain: Optional[String] = None
    DomainIAMRoleName: Optional[String] = None
    EnableCloudwatchLogsExports: Optional[LogTypeList] = None
    EnableCustomerOwnedIp: Optional[BooleanOptional] = None
    EnableIAMDatabaseAuthentication: Optional[BooleanOptional] = None
    Engine: Optional[String] = None
    Iops: Optional[IntegerOptional] = None
    LicenseModel: Optional[String] = None
    MultiAZ: Optional[BooleanOptional] = None
    NetworkType: Optional[String] = None
    OptionGroupName: Optional[String] = None
    Port: Optional[IntegerOptional] = None
    ProcessorFeatures: Optional[ProcessorFeatureList] = None
    PubliclyAccessible: Optional[BooleanOptional] = None
    StorageThroughput: Optional[IntegerOptional] = None
    StorageType: Optional[String] = None
    Tags: Optional[TagList] = None
    TdeCredentialArn: Optional[String] = None
    TdeCredentialPassword: Optional[String] = None
    UseDefaultProcessorFeatures: Optional[BooleanOptional] = None
    VpcSecurityGroupIds: Optional[VpcSecurityGroupIdList] = None


class RestoreDBInstanceFromS3Message(BaseModel):
    AllocatedStorage: Optional[IntegerOptional] = None
    AutoMinorVersionUpgrade: Optional[BooleanOptional] = None
    AvailabilityZone: Optional[String] = None
    BackupRetentionPeriod: Optional[IntegerOptional] = None
    CopyTagsToSnapshot: Optional[BooleanOptional] = None
    DBInstanceClass: String
    DBInstanceIdentifier: String
    DBName: Optional[String] = None
    DBParameterGroupName: Optional[String] = None
    DBSecurityGroups: Optional[DBSecurityGroupNameList] = None
    DBSubnetGroupName: Optional[String] = None
    DeletionProtection: Optional[BooleanOptional] = None
    EnableCloudwatchLogsExports: Optional[LogTypeList] = None
    EnableIAMDatabaseAuthentication: Optional[BooleanOptional] = None
    EnablePerformanceInsights: Optional[BooleanOptional] = None
    Engine: String
    EngineVersion: Optional[String] = None
    Iops: Optional[IntegerOptional] = None
    KmsKeyId: Optional[String] = None
    LicenseModel: Optional[String] = None
    ManageMasterUserPassword: Optional[BooleanOptional] = None
    MasterUserPassword: Optional[String] = None
    MasterUserSecretKmsKeyId: Optional[String] = None
    MasterUsername: Optional[String] = None
    MaxAllocatedStorage: Optional[IntegerOptional] = None
    MonitoringInterval: Optional[IntegerOptional] = None
    MonitoringRoleArn: Optional[String] = None
    MultiAZ: Optional[BooleanOptional] = None
    NetworkType: Optional[String] = None
    OptionGroupName: Optional[String] = None
    PerformanceInsightsKMSKeyId: Optional[String] = None
    PerformanceInsightsRetentionPeriod: Optional[IntegerOptional] = None
    Port: Optional[IntegerOptional] = None
    PreferredBackupWindow: Optional[String] = None
    PreferredMaintenanceWindow: Optional[String] = None
    ProcessorFeatures: Optional[ProcessorFeatureList] = None
    PubliclyAccessible: Optional[BooleanOptional] = None
    S3BucketName: String
    S3IngestionRoleArn: String
    S3Prefix: Optional[String] = None
    SourceEngine: String
    SourceEngineVersion: String
    StorageEncrypted: Optional[BooleanOptional] = None
    StorageThroughput: Optional[IntegerOptional] = None
    StorageType: Optional[String] = None
    Tags: Optional[TagList] = None
    UseDefaultProcessorFeatures: Optional[BooleanOptional] = None
    VpcSecurityGroupIds: Optional[VpcSecurityGroupIdList] = None


class RestoreDBInstanceToPointInTimeMessage(BaseModel):
    AllocatedStorage: Optional[IntegerOptional] = None
    AutoMinorVersionUpgrade: Optional[BooleanOptional] = None
    AvailabilityZone: Optional[String] = None
    BackupTarget: Optional[String] = None
    CopyTagsToSnapshot: Optional[BooleanOptional] = None
    CustomIamInstanceProfile: Optional[String] = None
    DBInstanceClass: Optional[String] = None
    DBName: Optional[String] = None
    DBParameterGroupName: Optional[String] = None
    DBSubnetGroupName: Optional[String] = None
    DeletionProtection: Optional[BooleanOptional] = None
    Domain: Optional[String] = None
    DomainIAMRoleName: Optional[String] = None
    EnableCloudwatchLogsExports: Optional[LogTypeList] = None
    EnableCustomerOwnedIp: Optional[BooleanOptional] = None
    EnableIAMDatabaseAuthentication: Optional[BooleanOptional] = None
    Engine: Optional[String] = None
    Iops: Optional[IntegerOptional] = None
    LicenseModel: Optional[String] = None
    MaxAllocatedStorage: Optional[IntegerOptional] = None
    MultiAZ: Optional[BooleanOptional] = None
    NetworkType: Optional[String] = None
    OptionGroupName: Optional[String] = None
    Port: Optional[IntegerOptional] = None
    ProcessorFeatures: Optional[ProcessorFeatureList] = None
    PubliclyAccessible: Optional[BooleanOptional] = None
    RestoreTime: Optional[TStamp] = None
    SourceDBInstanceAutomatedBackupsArn: Optional[String] = None
    SourceDBInstanceIdentifier: Optional[String] = None
    SourceDbiResourceId: Optional[String] = None
    StorageThroughput: Optional[IntegerOptional] = None
    StorageType: Optional[String] = None
    Tags: Optional[TagList] = None
    TargetDBInstanceIdentifier: String
    TdeCredentialArn: Optional[String] = None
    TdeCredentialPassword: Optional[String] = None
    UseDefaultProcessorFeatures: Optional[BooleanOptional] = None
    UseLatestRestorableTime: Optional[Boolean] = None
    VpcSecurityGroupIds: Optional[VpcSecurityGroupIdList] = None


class RestoreWindow(BaseModel):
    EarliestTime: Optional[TStamp] = None
    LatestTime: Optional[TStamp] = None


class RevokeDBSecurityGroupIngressMessage(BaseModel):
    CIDRIP: Optional[String] = None
    DBSecurityGroupName: String
    EC2SecurityGroupId: Optional[String] = None
    EC2SecurityGroupName: Optional[String] = None
    EC2SecurityGroupOwnerId: Optional[String] = None


class ScalingConfigurationInfo(BaseModel):
    AutoPause: Optional[BooleanOptional] = None
    MaxCapacity: Optional[IntegerOptional] = None
    MinCapacity: Optional[IntegerOptional] = None
    SecondsBeforeTimeout: Optional[IntegerOptional] = None
    SecondsUntilAutoPause: Optional[IntegerOptional] = None
    TimeoutAction: Optional[String] = None


class SourceIdsList(RootModel[List[String]]):
    root: List[String]


class SourceRegion(BaseModel):
    Endpoint: Optional[String] = None
    RegionName: Optional[String] = None
    Status: Optional[String] = None
    SupportsDBInstanceAutomatedBackupsReplication: Optional[Boolean] = None


class SourceRegionList(RootModel[List[SourceRegion]]):
    root: List[SourceRegion]


class SourceRegionMessage(BaseModel):
    Marker: Optional[String] = None
    SourceRegions: Optional[SourceRegionList] = None


class StartActivityStreamRequest(BaseModel):
    ApplyImmediately: Optional[BooleanOptional] = None
    EngineNativeAuditFieldsIncluded: Optional[BooleanOptional] = None
    KmsKeyId: String
    Mode: ActivityStreamMode
    ResourceArn: String


class StartActivityStreamResponse(BaseModel):
    ApplyImmediately: Optional[Boolean] = None
    EngineNativeAuditFieldsIncluded: Optional[BooleanOptional] = None
    KinesisStreamName: Optional[String] = None
    KmsKeyId: Optional[String] = None
    Mode: Optional[ActivityStreamMode] = None
    Status: Optional[ActivityStreamStatus] = None


class StartDBClusterMessage(BaseModel):
    DBClusterIdentifier: String


class StartDBInstanceAutomatedBackupsReplicationMessage(BaseModel):
    BackupRetentionPeriod: Optional[IntegerOptional] = None
    KmsKeyId: Optional[String] = None
    PreSignedUrl: Optional[String] = None
    SourceDBInstanceArn: String


class StartDBInstanceMessage(BaseModel):
    DBInstanceIdentifier: String


class StartExportTaskMessage(BaseModel):
    ExportOnly: Optional[StringList] = None
    ExportTaskIdentifier: String
    IamRoleArn: String
    KmsKeyId: String
    S3BucketName: String
    S3Prefix: Optional[String] = None
    SourceArn: String


class StopActivityStreamRequest(BaseModel):
    ApplyImmediately: Optional[BooleanOptional] = None
    ResourceArn: String


class StopActivityStreamResponse(BaseModel):
    KinesisStreamName: Optional[String] = None
    KmsKeyId: Optional[String] = None
    Status: Optional[ActivityStreamStatus] = None


class StopDBClusterMessage(BaseModel):
    DBClusterIdentifier: String


class StopDBInstanceAutomatedBackupsReplicationMessage(BaseModel):
    SourceDBInstanceArn: String


class StopDBInstanceMessage(BaseModel):
    DBInstanceIdentifier: String
    DBSnapshotIdentifier: Optional[String] = None


class Subnet(BaseModel):
    SubnetAvailabilityZone: Optional[AvailabilityZone] = None
    SubnetIdentifier: Optional[String] = None
    SubnetOutpost: Optional[Outpost] = None
    SubnetStatus: Optional[String] = None


class SubnetList(RootModel[List[Subnet]]):
    root: List[Subnet]


class SupportedCharacterSetsList(RootModel[List[CharacterSet]]):
    root: List[CharacterSet]


class SupportedTimezonesList(RootModel[List[Timezone]]):
    root: List[Timezone]


class SwitchoverBlueGreenDeploymentRequest(BaseModel):
    BlueGreenDeploymentIdentifier_1: BlueGreenDeploymentIdentifier = Field(
        ..., alias='BlueGreenDeploymentIdentifier'
    )
    SwitchoverTimeout_1: Optional[SwitchoverTimeout] = Field(
        None, alias='SwitchoverTimeout'
    )


class SwitchoverDetail(BaseModel):
    SourceMember: Optional[DatabaseArn] = None
    Status: Optional[SwitchoverDetailStatus] = None
    TargetMember: Optional[DatabaseArn] = None


class SwitchoverDetailList(RootModel[List[SwitchoverDetail]]):
    root: List[SwitchoverDetail]


class TargetGroupList(RootModel[List[DBProxyTargetGroup]]):
    root: List[DBProxyTargetGroup]


class TargetHealth(BaseModel):
    Description: Optional[String] = None
    Reason: Optional[TargetHealthReason] = None
    State: Optional[TargetState] = None


class UpgradeTarget(BaseModel):
    AutoUpgrade: Optional[Boolean] = None
    Description: Optional[String] = None
    Engine: Optional[String] = None
    EngineVersion: Optional[String] = None
    IsMajorVersionUpgrade: Optional[Boolean] = None
    SupportedEngineModes: Optional[EngineModeList] = None
    SupportsBabelfish: Optional[BooleanOptional] = None
    SupportsGlobalDatabases: Optional[BooleanOptional] = None
    SupportsParallelQuery: Optional[BooleanOptional] = None


class ValidDBInstanceModificationsMessage(BaseModel):
    Storage: Optional[ValidStorageOptionsList] = None
    ValidProcessorFeatures: Optional[AvailableProcessorFeatureList] = None


class ValidUpgradeTargetList(RootModel[List[UpgradeTarget]]):
    root: List[UpgradeTarget]


class ProcessorFeatures(RootModel[List[ProcessorFeature]]):
    root: List[ProcessorFeature]


class CloudwatchLogsExportConfiguration(BaseModel):
    DisableLogTypes: Optional[LogTypeList] = None
    EnableLogTypes: Optional[LogTypeList] = None


class Parameters(RootModel[List[Parameter]]):
    root: List[Parameter]


class AccountAttributesMessage(BaseModel):
    AccountQuotas: Optional[AccountQuotaList] = None


class ApplyPendingMaintenanceActionResult(BaseModel):
    ResourcePendingMaintenanceActions_1: Optional[ResourcePendingMaintenanceActions] = (
        Field(None, alias='ResourcePendingMaintenanceActions')
    )


class BlueGreenDeployment(BaseModel):
    BlueGreenDeploymentIdentifier_1: Optional[BlueGreenDeploymentIdentifier] = Field(
        None, alias='BlueGreenDeploymentIdentifier'
    )
    BlueGreenDeploymentName_1: Optional[BlueGreenDeploymentName] = Field(
        None, alias='BlueGreenDeploymentName'
    )
    CreateTime: Optional[TStamp] = None
    DeleteTime: Optional[TStamp] = None
    Source: Optional[DatabaseArn] = None
    Status: Optional[BlueGreenDeploymentStatus] = None
    StatusDetails: Optional[BlueGreenDeploymentStatusDetails] = None
    SwitchoverDetails: Optional[SwitchoverDetailList] = None
    TagList_1: Optional[TagList] = Field(None, alias='TagList')
    Target: Optional[DatabaseArn] = None
    Tasks: Optional[BlueGreenDeploymentTaskList] = None


class BlueGreenDeploymentList(RootModel[List[BlueGreenDeployment]]):
    root: List[BlueGreenDeployment]


class ClusterPendingModifiedValues(BaseModel):
    AllocatedStorage: Optional[IntegerOptional] = None
    BackupRetentionPeriod: Optional[IntegerOptional] = None
    DBClusterIdentifier: Optional[String] = None
    EngineVersion: Optional[String] = None
    IAMDatabaseAuthenticationEnabled: Optional[BooleanOptional] = None
    Iops: Optional[IntegerOptional] = None
    MasterUserPassword: Optional[String] = None
    PendingCloudwatchLogsExports_1: Optional[PendingCloudwatchLogsExports] = Field(
        None, alias='PendingCloudwatchLogsExports'
    )


class CopyDBClusterParameterGroupResult(BaseModel):
    DBClusterParameterGroup_1: Optional[DBClusterParameterGroup] = Field(
        None, alias='DBClusterParameterGroup'
    )


class CopyDBClusterSnapshotResult(BaseModel):
    DBClusterSnapshot_1: Optional[DBClusterSnapshot] = Field(
        None, alias='DBClusterSnapshot'
    )


class CopyDBParameterGroupResult(BaseModel):
    DBParameterGroup_1: Optional[DBParameterGroup] = Field(
        None, alias='DBParameterGroup'
    )


class CreateBlueGreenDeploymentResponse(BaseModel):
    BlueGreenDeployment_1: Optional[BlueGreenDeployment] = Field(
        None, alias='BlueGreenDeployment'
    )


class CreateDBClusterMessage(BaseModel):
    AllocatedStorage: Optional[IntegerOptional] = None
    AutoMinorVersionUpgrade: Optional[BooleanOptional] = None
    AvailabilityZones_1: Optional[AvailabilityZones] = Field(
        None, alias='AvailabilityZones'
    )
    BacktrackWindow: Optional[LongOptional] = None
    BackupRetentionPeriod: Optional[IntegerOptional] = None
    CharacterSetName: Optional[String] = None
    CopyTagsToSnapshot: Optional[BooleanOptional] = None
    DBClusterIdentifier: String
    DBClusterInstanceClass: Optional[String] = None
    DBClusterParameterGroupName: Optional[String] = None
    DBSubnetGroupName: Optional[String] = None
    DBSystemId: Optional[String] = None
    DatabaseName: Optional[String] = None
    DeletionProtection: Optional[BooleanOptional] = None
    Domain: Optional[String] = None
    DomainIAMRoleName: Optional[String] = None
    EnableCloudwatchLogsExports: Optional[LogTypeList] = None
    EnableGlobalWriteForwarding: Optional[BooleanOptional] = None
    EnableHttpEndpoint: Optional[BooleanOptional] = None
    EnableIAMDatabaseAuthentication: Optional[BooleanOptional] = None
    EnablePerformanceInsights: Optional[BooleanOptional] = None
    Engine: String
    EngineMode: Optional[String] = None
    EngineVersion: Optional[String] = None
    GlobalClusterIdentifier: Optional[String] = None
    Iops: Optional[IntegerOptional] = None
    KmsKeyId: Optional[String] = None
    ManageMasterUserPassword: Optional[BooleanOptional] = None
    MasterUserPassword: Optional[String] = None
    MasterUserSecretKmsKeyId: Optional[String] = None
    MasterUsername: Optional[String] = None
    MonitoringInterval: Optional[IntegerOptional] = None
    MonitoringRoleArn: Optional[String] = None
    NetworkType: Optional[String] = None
    OptionGroupName: Optional[String] = None
    PerformanceInsightsKMSKeyId: Optional[String] = None
    PerformanceInsightsRetentionPeriod: Optional[IntegerOptional] = None
    Port: Optional[IntegerOptional] = None
    PreSignedUrl: Optional[String] = None
    PreferredBackupWindow: Optional[String] = None
    PreferredMaintenanceWindow: Optional[String] = None
    PubliclyAccessible: Optional[BooleanOptional] = None
    ReplicationSourceIdentifier: Optional[String] = None
    ScalingConfiguration_1: Optional[ScalingConfiguration] = Field(
        None, alias='ScalingConfiguration'
    )
    ServerlessV2ScalingConfiguration_1: Optional[ServerlessV2ScalingConfiguration] = (
        Field(None, alias='ServerlessV2ScalingConfiguration')
    )
    SourceRegion: Optional[String] = None
    StorageEncrypted: Optional[BooleanOptional] = None
    StorageType: Optional[String] = None
    Tags: Optional[TagList] = None
    VpcSecurityGroupIds: Optional[VpcSecurityGroupIdList] = None


class CreateDBClusterParameterGroupResult(BaseModel):
    DBClusterParameterGroup_1: Optional[DBClusterParameterGroup] = Field(
        None, alias='DBClusterParameterGroup'
    )


class CreateDBClusterSnapshotResult(BaseModel):
    DBClusterSnapshot_1: Optional[DBClusterSnapshot] = Field(
        None, alias='DBClusterSnapshot'
    )


class CreateDBInstanceMessage(BaseModel):
    AllocatedStorage: Optional[IntegerOptional] = None
    AutoMinorVersionUpgrade: Optional[BooleanOptional] = None
    AvailabilityZone: Optional[String] = None
    BackupRetentionPeriod: Optional[IntegerOptional] = None
    BackupTarget: Optional[String] = None
    CACertificateIdentifier: Optional[String] = None
    CharacterSetName: Optional[String] = None
    CopyTagsToSnapshot: Optional[BooleanOptional] = None
    CustomIamInstanceProfile: Optional[String] = None
    DBClusterIdentifier: Optional[String] = None
    DBInstanceClass: String
    DBInstanceIdentifier: String
    DBName: Optional[String] = None
    DBParameterGroupName: Optional[String] = None
    DBSecurityGroups: Optional[DBSecurityGroupNameList] = None
    DBSubnetGroupName: Optional[String] = None
    DeletionProtection: Optional[BooleanOptional] = None
    Domain: Optional[String] = None
    DomainIAMRoleName: Optional[String] = None
    EnableCloudwatchLogsExports: Optional[LogTypeList] = None
    EnableCustomerOwnedIp: Optional[BooleanOptional] = None
    EnableIAMDatabaseAuthentication: Optional[BooleanOptional] = None
    EnablePerformanceInsights: Optional[BooleanOptional] = None
    Engine: String
    EngineVersion: Optional[String] = None
    Iops: Optional[IntegerOptional] = None
    KmsKeyId: Optional[String] = None
    LicenseModel: Optional[String] = None
    ManageMasterUserPassword: Optional[BooleanOptional] = None
    MasterUserPassword: Optional[String] = None
    MasterUserSecretKmsKeyId: Optional[String] = None
    MasterUsername: Optional[String] = None
    MaxAllocatedStorage: Optional[IntegerOptional] = None
    MonitoringInterval: Optional[IntegerOptional] = None
    MonitoringRoleArn: Optional[String] = None
    MultiAZ: Optional[BooleanOptional] = None
    NcharCharacterSetName: Optional[String] = None
    NetworkType: Optional[String] = None
    OptionGroupName: Optional[String] = None
    PerformanceInsightsKMSKeyId: Optional[String] = None
    PerformanceInsightsRetentionPeriod: Optional[IntegerOptional] = None
    Port: Optional[IntegerOptional] = None
    PreferredBackupWindow: Optional[String] = None
    PreferredMaintenanceWindow: Optional[String] = None
    ProcessorFeatures: Optional[ProcessorFeatureList] = None
    PromotionTier: Optional[IntegerOptional] = None
    PubliclyAccessible: Optional[BooleanOptional] = None
    StorageEncrypted: Optional[BooleanOptional] = None
    StorageThroughput: Optional[IntegerOptional] = None
    StorageType: Optional[String] = None
    Tags: Optional[TagList] = None
    TdeCredentialArn: Optional[String] = None
    TdeCredentialPassword: Optional[String] = None
    Timezone: Optional[String] = None
    VpcSecurityGroupIds: Optional[VpcSecurityGroupIdList] = None


class CreateDBInstanceReadReplicaMessage(BaseModel):
    AllocatedStorage: Optional[IntegerOptional] = None
    AutoMinorVersionUpgrade: Optional[BooleanOptional] = None
    AvailabilityZone: Optional[String] = None
    CopyTagsToSnapshot: Optional[BooleanOptional] = None
    CustomIamInstanceProfile: Optional[String] = None
    DBInstanceClass: Optional[String] = None
    DBInstanceIdentifier: String
    DBParameterGroupName: Optional[String] = None
    DBSubnetGroupName: Optional[String] = None
    DeletionProtection: Optional[BooleanOptional] = None
    Domain: Optional[String] = None
    DomainIAMRoleName: Optional[String] = None
    EnableCloudwatchLogsExports: Optional[LogTypeList] = None
    EnableCustomerOwnedIp: Optional[BooleanOptional] = None
    EnableIAMDatabaseAuthentication: Optional[BooleanOptional] = None
    EnablePerformanceInsights: Optional[BooleanOptional] = None
    Iops: Optional[IntegerOptional] = None
    KmsKeyId: Optional[String] = None
    MaxAllocatedStorage: Optional[IntegerOptional] = None
    MonitoringInterval: Optional[IntegerOptional] = None
    MonitoringRoleArn: Optional[String] = None
    MultiAZ: Optional[BooleanOptional] = None
    NetworkType: Optional[String] = None
    OptionGroupName: Optional[String] = None
    PerformanceInsightsKMSKeyId: Optional[String] = None
    PerformanceInsightsRetentionPeriod: Optional[IntegerOptional] = None
    Port: Optional[IntegerOptional] = None
    PreSignedUrl: Optional[String] = None
    ProcessorFeatures: Optional[ProcessorFeatureList] = None
    PubliclyAccessible: Optional[BooleanOptional] = None
    ReplicaMode_1: Optional[ReplicaMode] = Field(None, alias='ReplicaMode')
    SourceDBClusterIdentifier: Optional[String] = None
    SourceDBInstanceIdentifier: Optional[String] = None
    SourceRegion: Optional[String] = None
    StorageThroughput: Optional[IntegerOptional] = None
    StorageType: Optional[String] = None
    Tags: Optional[TagList] = None
    UseDefaultProcessorFeatures: Optional[BooleanOptional] = None
    VpcSecurityGroupIds: Optional[VpcSecurityGroupIdList] = None


class CreateDBParameterGroupResult(BaseModel):
    DBParameterGroup_1: Optional[DBParameterGroup] = Field(
        None, alias='DBParameterGroup'
    )


class CreateDBProxyEndpointResponse(BaseModel):
    DBProxyEndpoint_1: Optional[DBProxyEndpoint] = Field(None, alias='DBProxyEndpoint')


class CreateDBProxyResponse(BaseModel):
    DBProxy_1: Optional[DBProxy] = Field(None, alias='DBProxy')


class CreateEventSubscriptionMessage(BaseModel):
    Enabled: Optional[BooleanOptional] = None
    EventCategories: Optional[EventCategoriesList] = None
    SnsTopicArn: String
    SourceIds: Optional[SourceIdsList] = None
    SourceType: Optional[String] = None
    SubscriptionName: String
    Tags: Optional[TagList] = None


class DBClusterOptionGroupMemberships(RootModel[List[DBClusterOptionGroupStatus]]):
    root: List[DBClusterOptionGroupStatus]


class DBClusterParameterGroupDetails(BaseModel):
    Marker: Optional[String] = None
    Parameters: Optional[ParametersList] = None


class DBEngineVersion(BaseModel):
    CreateTime: Optional[TStamp] = None
    CustomDBEngineVersionManifest_1: Optional[CustomDBEngineVersionManifest] = Field(
        None, alias='CustomDBEngineVersionManifest'
    )
    DBEngineDescription: Optional[String] = None
    DBEngineMediaType: Optional[String] = None
    DBEngineVersionArn: Optional[String] = None
    DBEngineVersionDescription: Optional[String] = None
    DBParameterGroupFamily: Optional[String] = None
    DatabaseInstallationFilesS3BucketName: Optional[String] = None
    DatabaseInstallationFilesS3Prefix: Optional[String] = None
    DefaultCharacterSet: Optional[CharacterSet] = None
    Engine: Optional[String] = None
    EngineVersion: Optional[String] = None
    ExportableLogTypes: Optional[LogTypeList] = None
    Image: Optional[CustomDBEngineVersionAMI] = None
    KMSKeyId: Optional[String] = None
    MajorEngineVersion: Optional[String] = None
    Status: Optional[String] = None
    SupportedCACertificateIdentifiers: Optional[CACertificateIdentifiersList] = None
    SupportedCharacterSets: Optional[SupportedCharacterSetsList] = None
    SupportedEngineModes: Optional[EngineModeList] = None
    SupportedFeatureNames: Optional[FeatureNameList] = None
    SupportedNcharCharacterSets: Optional[SupportedCharacterSetsList] = None
    SupportedTimezones: Optional[SupportedTimezonesList] = None
    SupportsBabelfish: Optional[Boolean] = None
    SupportsCertificateRotationWithoutRestart: Optional[BooleanOptional] = None
    SupportsGlobalDatabases: Optional[Boolean] = None
    SupportsLogExportsToCloudwatchLogs: Optional[Boolean] = None
    SupportsParallelQuery: Optional[Boolean] = None
    SupportsReadReplica: Optional[Boolean] = None
    TagList_1: Optional[TagList] = Field(None, alias='TagList')
    ValidUpgradeTarget: Optional[ValidUpgradeTargetList] = None


class DBEngineVersionList(RootModel[List[DBEngineVersion]]):
    root: List[DBEngineVersion]


class DBEngineVersionMessage(BaseModel):
    DBEngineVersions: Optional[DBEngineVersionList] = None
    Marker: Optional[String] = None


class DBInstanceAutomatedBackup(BaseModel):
    AllocatedStorage: Optional[Integer] = None
    AvailabilityZone: Optional[String] = None
    BackupRetentionPeriod: Optional[IntegerOptional] = None
    BackupTarget: Optional[String] = None
    DBInstanceArn: Optional[String] = None
    DBInstanceAutomatedBackupsArn: Optional[String] = None
    DBInstanceAutomatedBackupsReplications: Optional[
        DBInstanceAutomatedBackupsReplicationList
    ] = None
    DBInstanceIdentifier: Optional[String] = None
    DbiResourceId: Optional[String] = None
    Encrypted: Optional[Boolean] = None
    Engine: Optional[String] = None
    EngineVersion: Optional[String] = None
    IAMDatabaseAuthenticationEnabled: Optional[Boolean] = None
    InstanceCreateTime: Optional[TStamp] = None
    Iops: Optional[IntegerOptional] = None
    KmsKeyId: Optional[String] = None
    LicenseModel: Optional[String] = None
    MasterUsername: Optional[String] = None
    OptionGroupName: Optional[String] = None
    Port: Optional[Integer] = None
    Region: Optional[String] = None
    RestoreWindow_1: Optional[RestoreWindow] = Field(None, alias='RestoreWindow')
    Status: Optional[String] = None
    StorageThroughput: Optional[IntegerOptional] = None
    StorageType: Optional[String] = None
    TdeCredentialArn: Optional[String] = None
    Timezone: Optional[String] = None
    VpcId: Optional[String] = None


class DBInstanceAutomatedBackupList(RootModel[List[DBInstanceAutomatedBackup]]):
    root: List[DBInstanceAutomatedBackup]


class DBInstanceAutomatedBackupMessage(BaseModel):
    DBInstanceAutomatedBackups: Optional[DBInstanceAutomatedBackupList] = None
    Marker: Optional[String] = None


class DBParameterGroupDetails(BaseModel):
    Marker: Optional[String] = None
    Parameters: Optional[ParametersList] = None


class DBProxyTarget(BaseModel):
    Endpoint: Optional[String] = None
    Port: Optional[Integer] = None
    RdsResourceId: Optional[String] = None
    Role: Optional[TargetRole] = None
    TargetArn: Optional[String] = None
    TargetHealth_1: Optional[TargetHealth] = Field(None, alias='TargetHealth')
    TrackedClusterId: Optional[String] = None
    Type: Optional[TargetType] = None


class DBSecurityGroup(BaseModel):
    DBSecurityGroupArn: Optional[String] = None
    DBSecurityGroupDescription: Optional[String] = None
    DBSecurityGroupName: Optional[String] = None
    EC2SecurityGroups: Optional[EC2SecurityGroupList] = None
    IPRanges: Optional[IPRangeList] = None
    OwnerId: Optional[String] = None
    VpcId: Optional[String] = None


class DBSecurityGroups(RootModel[List[DBSecurityGroup]]):
    root: List[DBSecurityGroup]


class DBSnapshot(BaseModel):
    AllocatedStorage: Optional[Integer] = None
    AvailabilityZone: Optional[String] = None
    DBInstanceIdentifier: Optional[String] = None
    DBSnapshotArn: Optional[String] = None
    DBSnapshotIdentifier: Optional[String] = None
    DbiResourceId: Optional[String] = None
    Encrypted: Optional[Boolean] = None
    Engine: Optional[String] = None
    EngineVersion: Optional[String] = None
    IAMDatabaseAuthenticationEnabled: Optional[Boolean] = None
    InstanceCreateTime: Optional[TStamp] = None
    Iops: Optional[IntegerOptional] = None
    KmsKeyId: Optional[String] = None
    LicenseModel: Optional[String] = None
    MasterUsername: Optional[String] = None
    OptionGroupName: Optional[String] = None
    OriginalSnapshotCreateTime: Optional[TStamp] = None
    PercentProgress: Optional[Integer] = None
    Port: Optional[Integer] = None
    ProcessorFeatures: Optional[ProcessorFeatureList] = None
    SnapshotCreateTime: Optional[TStamp] = None
    SnapshotDatabaseTime: Optional[TStamp] = None
    SnapshotTarget: Optional[String] = None
    SnapshotType: Optional[String] = None
    SourceDBSnapshotIdentifier: Optional[String] = None
    SourceRegion: Optional[String] = None
    Status: Optional[String] = None
    StorageThroughput: Optional[IntegerOptional] = None
    StorageType: Optional[String] = None
    TagList_1: Optional[TagList] = Field(None, alias='TagList')
    TdeCredentialArn: Optional[String] = None
    Timezone: Optional[String] = None
    VpcId: Optional[String] = None


class DBSnapshotList(RootModel[List[DBSnapshot]]):
    root: List[DBSnapshot]


class DBSnapshotMessage(BaseModel):
    DBSnapshots: Optional[DBSnapshotList] = None
    Marker: Optional[String] = None


class DBSubnetGroup(BaseModel):
    DBSubnetGroupArn: Optional[String] = None
    DBSubnetGroupDescription: Optional[String] = None
    DBSubnetGroupName: Optional[String] = None
    SubnetGroupStatus: Optional[String] = None
    Subnets: Optional[SubnetList] = None
    SupportedNetworkTypes: Optional[StringList] = None
    VpcId: Optional[String] = None


class DBSubnetGroups(RootModel[List[DBSubnetGroup]]):
    root: List[DBSubnetGroup]


class DeleteBlueGreenDeploymentResponse(BaseModel):
    BlueGreenDeployment_1: Optional[BlueGreenDeployment] = Field(
        None, alias='BlueGreenDeployment'
    )


class DeleteDBInstanceAutomatedBackupResult(BaseModel):
    DBInstanceAutomatedBackup_1: Optional[DBInstanceAutomatedBackup] = Field(
        None, alias='DBInstanceAutomatedBackup'
    )


class DeleteDBSnapshotResult(BaseModel):
    DBSnapshot_1: Optional[DBSnapshot] = Field(None, alias='DBSnapshot')


class DescribeBlueGreenDeploymentsResponse(BaseModel):
    BlueGreenDeployments: Optional[BlueGreenDeploymentList] = None
    Marker: Optional[String] = None


class DescribeDBProxyTargetGroupsResponse(BaseModel):
    Marker: Optional[String] = None
    TargetGroups: Optional[TargetGroupList] = None


class DescribeValidDBInstanceModificationsResult(BaseModel):
    ValidDBInstanceModificationsMessage_1: Optional[
        ValidDBInstanceModificationsMessage
    ] = Field(None, alias='ValidDBInstanceModificationsMessage')


class EngineDefaults(BaseModel):
    DBParameterGroupFamily: Optional[String] = None
    Marker: Optional[String] = None
    Parameters: Optional[ParametersList] = None


class Event(BaseModel):
    Date: Optional[TStamp] = None
    EventCategories: Optional[EventCategoriesList] = None
    Message: Optional[String] = None
    SourceArn: Optional[String] = None
    SourceIdentifier: Optional[String] = None
    SourceType_1: Optional[SourceType] = Field(None, alias='SourceType')


class EventList(RootModel[List[Event]]):
    root: List[Event]


class EventSubscription(BaseModel):
    CustSubscriptionId: Optional[String] = None
    CustomerAwsId: Optional[String] = None
    Enabled: Optional[Boolean] = None
    EventCategoriesList_1: Optional[EventCategoriesList] = Field(
        None, alias='EventCategoriesList'
    )
    EventSubscriptionArn: Optional[String] = None
    SnsTopicArn: Optional[String] = None
    SourceIdsList_1: Optional[SourceIdsList] = Field(None, alias='SourceIdsList')
    SourceType: Optional[String] = None
    Status: Optional[String] = None
    SubscriptionCreationTime: Optional[String] = None


class EventSubscriptionsList(RootModel[List[EventSubscription]]):
    root: List[EventSubscription]


class EventSubscriptionsMessage(BaseModel):
    EventSubscriptionsList_1: Optional[EventSubscriptionsList] = Field(
        None, alias='EventSubscriptionsList'
    )
    Marker: Optional[String] = None


class EventsMessage(BaseModel):
    Events: Optional[EventList] = None
    Marker: Optional[String] = None


class Filter(BaseModel):
    Name: String
    Values: FilterValueList


class FilterList(RootModel[List[Filter]]):
    root: List[Filter]


class GlobalClusterMember(BaseModel):
    DBClusterArn: Optional[String] = None
    GlobalWriteForwardingStatus: Optional[WriteForwardingStatus] = None
    IsWriter: Optional[Boolean] = None
    Readers: Optional[ReadersArnList] = None


class GlobalClusterMemberList(RootModel[List[GlobalClusterMember]]):
    root: List[GlobalClusterMember]


class ListTagsForResourceMessage(BaseModel):
    Filters: Optional[FilterList] = None
    ResourceName: String


class ModifyDBClusterMessage(BaseModel):
    AllocatedStorage: Optional[IntegerOptional] = None
    AllowEngineModeChange: Optional[Boolean] = None
    AllowMajorVersionUpgrade: Optional[Boolean] = None
    ApplyImmediately: Optional[Boolean] = None
    AutoMinorVersionUpgrade: Optional[BooleanOptional] = None
    BacktrackWindow: Optional[LongOptional] = None
    BackupRetentionPeriod: Optional[IntegerOptional] = None
    CloudwatchLogsExportConfiguration_1: Optional[CloudwatchLogsExportConfiguration] = (
        Field(None, alias='CloudwatchLogsExportConfiguration')
    )
    CopyTagsToSnapshot: Optional[BooleanOptional] = None
    DBClusterIdentifier: String
    DBClusterInstanceClass: Optional[String] = None
    DBClusterParameterGroupName: Optional[String] = None
    DBInstanceParameterGroupName: Optional[String] = None
    DeletionProtection: Optional[BooleanOptional] = None
    Domain: Optional[String] = None
    DomainIAMRoleName: Optional[String] = None
    EnableGlobalWriteForwarding: Optional[BooleanOptional] = None
    EnableHttpEndpoint: Optional[BooleanOptional] = None
    EnableIAMDatabaseAuthentication: Optional[BooleanOptional] = None
    EnablePerformanceInsights: Optional[BooleanOptional] = None
    EngineMode: Optional[String] = None
    EngineVersion: Optional[String] = None
    Iops: Optional[IntegerOptional] = None
    ManageMasterUserPassword: Optional[BooleanOptional] = None
    MasterUserPassword: Optional[String] = None
    MasterUserSecretKmsKeyId: Optional[String] = None
    MonitoringInterval: Optional[IntegerOptional] = None
    MonitoringRoleArn: Optional[String] = None
    NetworkType: Optional[String] = None
    NewDBClusterIdentifier: Optional[String] = None
    OptionGroupName: Optional[String] = None
    PerformanceInsightsKMSKeyId: Optional[String] = None
    PerformanceInsightsRetentionPeriod: Optional[IntegerOptional] = None
    Port: Optional[IntegerOptional] = None
    PreferredBackupWindow: Optional[String] = None
    PreferredMaintenanceWindow: Optional[String] = None
    RotateMasterUserPassword: Optional[BooleanOptional] = None
    ScalingConfiguration_1: Optional[ScalingConfiguration] = Field(
        None, alias='ScalingConfiguration'
    )
    ServerlessV2ScalingConfiguration_1: Optional[ServerlessV2ScalingConfiguration] = (
        Field(None, alias='ServerlessV2ScalingConfiguration')
    )
    StorageType: Optional[String] = None
    VpcSecurityGroupIds: Optional[VpcSecurityGroupIdList] = None


class ModifyDBClusterParameterGroupMessage(BaseModel):
    DBClusterParameterGroupName: String
    Parameters: ParametersList


class ModifyDBInstanceMessage(BaseModel):
    AllocatedStorage: Optional[IntegerOptional] = None
    AllowMajorVersionUpgrade: Optional[Boolean] = None
    ApplyImmediately: Optional[Boolean] = None
    AutoMinorVersionUpgrade: Optional[BooleanOptional] = None
    AutomationMode_1: Optional[AutomationMode] = Field(None, alias='AutomationMode')
    AwsBackupRecoveryPointArn_1: Optional[AwsBackupRecoveryPointArn] = Field(
        None, alias='AwsBackupRecoveryPointArn'
    )
    BackupRetentionPeriod: Optional[IntegerOptional] = None
    CACertificateIdentifier: Optional[String] = None
    CertificateRotationRestart: Optional[BooleanOptional] = None
    CloudwatchLogsExportConfiguration_1: Optional[CloudwatchLogsExportConfiguration] = (
        Field(None, alias='CloudwatchLogsExportConfiguration')
    )
    CopyTagsToSnapshot: Optional[BooleanOptional] = None
    DBInstanceClass: Optional[String] = None
    DBInstanceIdentifier: String
    DBParameterGroupName: Optional[String] = None
    DBPortNumber: Optional[IntegerOptional] = None
    DBSecurityGroups: Optional[DBSecurityGroupNameList] = None
    DBSubnetGroupName: Optional[String] = None
    DeletionProtection: Optional[BooleanOptional] = None
    Domain: Optional[String] = None
    DomainIAMRoleName: Optional[String] = None
    EnableCustomerOwnedIp: Optional[BooleanOptional] = None
    EnableIAMDatabaseAuthentication: Optional[BooleanOptional] = None
    EnablePerformanceInsights: Optional[BooleanOptional] = None
    EngineVersion: Optional[String] = None
    Iops: Optional[IntegerOptional] = None
    LicenseModel: Optional[String] = None
    ManageMasterUserPassword: Optional[BooleanOptional] = None
    MasterUserPassword: Optional[String] = None
    MasterUserSecretKmsKeyId: Optional[String] = None
    MaxAllocatedStorage: Optional[IntegerOptional] = None
    MonitoringInterval: Optional[IntegerOptional] = None
    MonitoringRoleArn: Optional[String] = None
    MultiAZ: Optional[BooleanOptional] = None
    NetworkType: Optional[String] = None
    NewDBInstanceIdentifier: Optional[String] = None
    OptionGroupName: Optional[String] = None
    PerformanceInsightsKMSKeyId: Optional[String] = None
    PerformanceInsightsRetentionPeriod: Optional[IntegerOptional] = None
    PreferredBackupWindow: Optional[String] = None
    PreferredMaintenanceWindow: Optional[String] = None
    ProcessorFeatures: Optional[ProcessorFeatureList] = None
    PromotionTier: Optional[IntegerOptional] = None
    PubliclyAccessible: Optional[BooleanOptional] = None
    ReplicaMode_1: Optional[ReplicaMode] = Field(None, alias='ReplicaMode')
    ResumeFullAutomationModeMinutes: Optional[IntegerOptional] = None
    RotateMasterUserPassword: Optional[BooleanOptional] = None
    StorageThroughput: Optional[IntegerOptional] = None
    StorageType: Optional[String] = None
    TdeCredentialArn: Optional[String] = None
    TdeCredentialPassword: Optional[String] = None
    UseDefaultProcessorFeatures: Optional[BooleanOptional] = None
    VpcSecurityGroupIds: Optional[VpcSecurityGroupIdList] = None


class ModifyDBParameterGroupMessage(BaseModel):
    DBParameterGroupName: String
    Parameters: ParametersList


class ModifyDBSnapshotResult(BaseModel):
    DBSnapshot_1: Optional[DBSnapshot] = Field(None, alias='DBSnapshot')


class ModifyDBSubnetGroupResult(BaseModel):
    DBSubnetGroup_1: Optional[DBSubnetGroup] = Field(None, alias='DBSubnetGroup')


class ModifyEventSubscriptionResult(BaseModel):
    EventSubscription_1: Optional[EventSubscription] = Field(
        None, alias='EventSubscription'
    )


class Option(BaseModel):
    DBSecurityGroupMemberships: Optional[DBSecurityGroupMembershipList] = None
    OptionDescription: Optional[String] = None
    OptionName: Optional[String] = None
    OptionSettings: Optional[OptionSettingConfigurationList] = None
    OptionVersion: Optional[String] = None
    Permanent: Optional[Boolean] = None
    Persistent: Optional[Boolean] = None
    Port: Optional[IntegerOptional] = None
    VpcSecurityGroupMemberships: Optional[VpcSecurityGroupMembershipList] = None


class OptionConfiguration(BaseModel):
    DBSecurityGroupMemberships: Optional[DBSecurityGroupNameList] = None
    OptionName: String
    OptionSettings: Optional[OptionSettingsList] = None
    OptionVersion: Optional[String] = None
    Port: Optional[IntegerOptional] = None
    VpcSecurityGroupMemberships: Optional[VpcSecurityGroupIdList] = None


class OptionConfigurationList(RootModel[List[OptionConfiguration]]):
    root: List[OptionConfiguration]


class OptionGroupOptionVersionsList(RootModel[List[OptionVersion]]):
    root: List[OptionVersion]


class OptionsList(RootModel[List[Option]]):
    root: List[Option]


class PendingMaintenanceActions(RootModel[List[ResourcePendingMaintenanceActions]]):
    root: List[ResourcePendingMaintenanceActions]


class PendingMaintenanceActionsMessage(BaseModel):
    Marker: Optional[String] = None
    PendingMaintenanceActions_1: Optional[PendingMaintenanceActions] = Field(
        None, alias='PendingMaintenanceActions'
    )


class PendingModifiedValues(BaseModel):
    AllocatedStorage: Optional[IntegerOptional] = None
    AutomationMode_1: Optional[AutomationMode] = Field(None, alias='AutomationMode')
    BackupRetentionPeriod: Optional[IntegerOptional] = None
    CACertificateIdentifier: Optional[String] = None
    DBInstanceClass: Optional[String] = None
    DBInstanceIdentifier: Optional[String] = None
    DBSubnetGroupName: Optional[String] = None
    EngineVersion: Optional[String] = None
    IAMDatabaseAuthenticationEnabled: Optional[BooleanOptional] = None
    Iops: Optional[IntegerOptional] = None
    LicenseModel: Optional[String] = None
    MasterUserPassword: Optional[String] = None
    MultiAZ: Optional[BooleanOptional] = None
    PendingCloudwatchLogsExports_1: Optional[PendingCloudwatchLogsExports] = Field(
        None, alias='PendingCloudwatchLogsExports'
    )
    Port: Optional[IntegerOptional] = None
    ProcessorFeatures: Optional[ProcessorFeatureList] = None
    ResumeFullAutomationModeTime: Optional[TStamp] = None
    StorageThroughput: Optional[IntegerOptional] = None
    StorageType: Optional[String] = None


class PurchaseReservedDBInstancesOfferingResult(BaseModel):
    ReservedDBInstance_1: Optional[ReservedDBInstance] = Field(
        None, alias='ReservedDBInstance'
    )


class RemoveSourceIdentifierFromSubscriptionResult(BaseModel):
    EventSubscription_1: Optional[EventSubscription] = Field(
        None, alias='EventSubscription'
    )


class RestoreDBClusterFromSnapshotMessage(BaseModel):
    AvailabilityZones_1: Optional[AvailabilityZones] = Field(
        None, alias='AvailabilityZones'
    )
    BacktrackWindow: Optional[LongOptional] = None
    CopyTagsToSnapshot: Optional[BooleanOptional] = None
    DBClusterIdentifier: String
    DBClusterInstanceClass: Optional[String] = None
    DBClusterParameterGroupName: Optional[String] = None
    DBSubnetGroupName: Optional[String] = None
    DatabaseName: Optional[String] = None
    DeletionProtection: Optional[BooleanOptional] = None
    Domain: Optional[String] = None
    DomainIAMRoleName: Optional[String] = None
    EnableCloudwatchLogsExports: Optional[LogTypeList] = None
    EnableIAMDatabaseAuthentication: Optional[BooleanOptional] = None
    Engine: String
    EngineMode: Optional[String] = None
    EngineVersion: Optional[String] = None
    Iops: Optional[IntegerOptional] = None
    KmsKeyId: Optional[String] = None
    NetworkType: Optional[String] = None
    OptionGroupName: Optional[String] = None
    Port: Optional[IntegerOptional] = None
    PubliclyAccessible: Optional[BooleanOptional] = None
    ScalingConfiguration_1: Optional[ScalingConfiguration] = Field(
        None, alias='ScalingConfiguration'
    )
    ServerlessV2ScalingConfiguration_1: Optional[ServerlessV2ScalingConfiguration] = (
        Field(None, alias='ServerlessV2ScalingConfiguration')
    )
    SnapshotIdentifier: String
    StorageType: Optional[String] = None
    Tags: Optional[TagList] = None
    VpcSecurityGroupIds: Optional[VpcSecurityGroupIdList] = None


class RestoreDBClusterToPointInTimeMessage(BaseModel):
    BacktrackWindow: Optional[LongOptional] = None
    CopyTagsToSnapshot: Optional[BooleanOptional] = None
    DBClusterIdentifier: String
    DBClusterInstanceClass: Optional[String] = None
    DBClusterParameterGroupName: Optional[String] = None
    DBSubnetGroupName: Optional[String] = None
    DeletionProtection: Optional[BooleanOptional] = None
    Domain: Optional[String] = None
    DomainIAMRoleName: Optional[String] = None
    EnableCloudwatchLogsExports: Optional[LogTypeList] = None
    EnableIAMDatabaseAuthentication: Optional[BooleanOptional] = None
    EngineMode: Optional[String] = None
    Iops: Optional[IntegerOptional] = None
    KmsKeyId: Optional[String] = None
    NetworkType: Optional[String] = None
    OptionGroupName: Optional[String] = None
    Port: Optional[IntegerOptional] = None
    PubliclyAccessible: Optional[BooleanOptional] = None
    RestoreToTime: Optional[TStamp] = None
    RestoreType: Optional[String] = None
    ScalingConfiguration_1: Optional[ScalingConfiguration] = Field(
        None, alias='ScalingConfiguration'
    )
    ServerlessV2ScalingConfiguration_1: Optional[ServerlessV2ScalingConfiguration] = (
        Field(None, alias='ServerlessV2ScalingConfiguration')
    )
    SourceDBClusterIdentifier: String
    StorageType: Optional[String] = None
    Tags: Optional[TagList] = None
    UseLatestRestorableTime: Optional[Boolean] = None
    VpcSecurityGroupIds: Optional[VpcSecurityGroupIdList] = None


class RevokeDBSecurityGroupIngressResult(BaseModel):
    DBSecurityGroup_1: Optional[DBSecurityGroup] = Field(None, alias='DBSecurityGroup')


class StartDBInstanceAutomatedBackupsReplicationResult(BaseModel):
    DBInstanceAutomatedBackup_1: Optional[DBInstanceAutomatedBackup] = Field(
        None, alias='DBInstanceAutomatedBackup'
    )


class StopDBInstanceAutomatedBackupsReplicationResult(BaseModel):
    DBInstanceAutomatedBackup_1: Optional[DBInstanceAutomatedBackup] = Field(
        None, alias='DBInstanceAutomatedBackup'
    )


class SwitchoverBlueGreenDeploymentResponse(BaseModel):
    BlueGreenDeployment_1: Optional[BlueGreenDeployment] = Field(
        None, alias='BlueGreenDeployment'
    )


class TargetList(RootModel[List[DBProxyTarget]]):
    root: List[DBProxyTarget]


class Filters(RootModel[List[Filter]]):
    root: List[Filter]


class OptionsToInclude(RootModel[List[OptionConfiguration]]):
    root: List[OptionConfiguration]


class AddSourceIdentifierToSubscriptionResult(BaseModel):
    EventSubscription_1: Optional[EventSubscription] = Field(
        None, alias='EventSubscription'
    )


class AuthorizeDBSecurityGroupIngressResult(BaseModel):
    DBSecurityGroup_1: Optional[DBSecurityGroup] = Field(None, alias='DBSecurityGroup')


class CopyDBSnapshotResult(BaseModel):
    DBSnapshot_1: Optional[DBSnapshot] = Field(None, alias='DBSnapshot')


class CreateDBSecurityGroupResult(BaseModel):
    DBSecurityGroup_1: Optional[DBSecurityGroup] = Field(None, alias='DBSecurityGroup')


class CreateDBSnapshotResult(BaseModel):
    DBSnapshot_1: Optional[DBSnapshot] = Field(None, alias='DBSnapshot')


class CreateDBSubnetGroupResult(BaseModel):
    DBSubnetGroup_1: Optional[DBSubnetGroup] = Field(None, alias='DBSubnetGroup')


class CreateEventSubscriptionResult(BaseModel):
    EventSubscription_1: Optional[EventSubscription] = Field(
        None, alias='EventSubscription'
    )


class DBCluster(BaseModel):
    ActivityStreamKinesisStreamName: Optional[String] = None
    ActivityStreamKmsKeyId: Optional[String] = None
    ActivityStreamMode_1: Optional[ActivityStreamMode] = Field(
        None, alias='ActivityStreamMode'
    )
    ActivityStreamStatus_1: Optional[ActivityStreamStatus] = Field(
        None, alias='ActivityStreamStatus'
    )
    AllocatedStorage: Optional[IntegerOptional] = None
    AssociatedRoles: Optional[DBClusterRoles] = None
    AutoMinorVersionUpgrade: Optional[Boolean] = None
    AutomaticRestartTime: Optional[TStamp] = None
    AvailabilityZones_1: Optional[AvailabilityZones] = Field(
        None, alias='AvailabilityZones'
    )
    BacktrackConsumedChangeRecords: Optional[LongOptional] = None
    BacktrackWindow: Optional[LongOptional] = None
    BackupRetentionPeriod: Optional[IntegerOptional] = None
    Capacity: Optional[IntegerOptional] = None
    CharacterSetName: Optional[String] = None
    CloneGroupId: Optional[String] = None
    ClusterCreateTime: Optional[TStamp] = None
    CopyTagsToSnapshot: Optional[BooleanOptional] = None
    CrossAccountClone: Optional[BooleanOptional] = None
    CustomEndpoints: Optional[StringList] = None
    DBClusterArn: Optional[String] = None
    DBClusterIdentifier: Optional[String] = None
    DBClusterInstanceClass: Optional[String] = None
    DBClusterMembers: Optional[DBClusterMemberList] = None
    DBClusterOptionGroupMemberships_1: Optional[DBClusterOptionGroupMemberships] = (
        Field(None, alias='DBClusterOptionGroupMemberships')
    )
    DBClusterParameterGroup: Optional[String] = None
    DBSubnetGroup: Optional[String] = None
    DBSystemId: Optional[String] = None
    DatabaseName: Optional[String] = None
    DbClusterResourceId: Optional[String] = None
    DeletionProtection: Optional[BooleanOptional] = None
    DomainMemberships: Optional[DomainMembershipList] = None
    EarliestBacktrackTime: Optional[TStamp] = None
    EarliestRestorableTime: Optional[TStamp] = None
    EnabledCloudwatchLogsExports: Optional[LogTypeList] = None
    Endpoint: Optional[String] = None
    Engine: Optional[String] = None
    EngineMode: Optional[String] = None
    EngineVersion: Optional[String] = None
    GlobalWriteForwardingRequested: Optional[BooleanOptional] = None
    GlobalWriteForwardingStatus: Optional[WriteForwardingStatus] = None
    HostedZoneId: Optional[String] = None
    HttpEndpointEnabled: Optional[BooleanOptional] = None
    IAMDatabaseAuthenticationEnabled: Optional[BooleanOptional] = None
    Iops: Optional[IntegerOptional] = None
    KmsKeyId: Optional[String] = None
    LatestRestorableTime: Optional[TStamp] = None
    MasterUserSecret_1: Optional[MasterUserSecret] = Field(
        None, alias='MasterUserSecret'
    )
    MasterUsername: Optional[String] = None
    MonitoringInterval: Optional[IntegerOptional] = None
    MonitoringRoleArn: Optional[String] = None
    MultiAZ: Optional[BooleanOptional] = None
    NetworkType: Optional[String] = None
    PendingModifiedValues: Optional[ClusterPendingModifiedValues] = None
    PercentProgress: Optional[String] = None
    PerformanceInsightsEnabled: Optional[BooleanOptional] = None
    PerformanceInsightsKMSKeyId: Optional[String] = None
    PerformanceInsightsRetentionPeriod: Optional[IntegerOptional] = None
    Port: Optional[IntegerOptional] = None
    PreferredBackupWindow: Optional[String] = None
    PreferredMaintenanceWindow: Optional[String] = None
    PubliclyAccessible: Optional[BooleanOptional] = None
    ReadReplicaIdentifiers: Optional[ReadReplicaIdentifierList] = None
    ReaderEndpoint: Optional[String] = None
    ReplicationSourceIdentifier: Optional[String] = None
    ScalingConfigurationInfo_1: Optional[ScalingConfigurationInfo] = Field(
        None, alias='ScalingConfigurationInfo'
    )
    ServerlessV2ScalingConfiguration: Optional[ServerlessV2ScalingConfigurationInfo] = (
        None
    )
    Status: Optional[String] = None
    StorageEncrypted: Optional[Boolean] = None
    StorageType: Optional[String] = None
    TagList_1: Optional[TagList] = Field(None, alias='TagList')
    VpcSecurityGroups: Optional[VpcSecurityGroupMembershipList] = None


class DBClusterList(RootModel[List[DBCluster]]):
    root: List[DBCluster]


class DBClusterMessage(BaseModel):
    DBClusters: Optional[DBClusterList] = None
    Marker: Optional[String] = None


class DBInstance(BaseModel):
    ActivityStreamEngineNativeAuditFieldsIncluded: Optional[BooleanOptional] = None
    ActivityStreamKinesisStreamName: Optional[String] = None
    ActivityStreamKmsKeyId: Optional[String] = None
    ActivityStreamMode_1: Optional[ActivityStreamMode] = Field(
        None, alias='ActivityStreamMode'
    )
    ActivityStreamPolicyStatus_1: Optional[ActivityStreamPolicyStatus] = Field(
        None, alias='ActivityStreamPolicyStatus'
    )
    ActivityStreamStatus_1: Optional[ActivityStreamStatus] = Field(
        None, alias='ActivityStreamStatus'
    )
    AllocatedStorage: Optional[Integer] = None
    AssociatedRoles: Optional[DBInstanceRoles] = None
    AutoMinorVersionUpgrade: Optional[Boolean] = None
    AutomaticRestartTime: Optional[TStamp] = None
    AutomationMode_1: Optional[AutomationMode] = Field(None, alias='AutomationMode')
    AvailabilityZone: Optional[String] = None
    AwsBackupRecoveryPointArn: Optional[String] = None
    BackupRetentionPeriod: Optional[Integer] = None
    BackupTarget: Optional[String] = None
    CACertificateIdentifier: Optional[String] = None
    CertificateDetails_1: Optional[CertificateDetails] = Field(
        None, alias='CertificateDetails'
    )
    CharacterSetName: Optional[String] = None
    CopyTagsToSnapshot: Optional[Boolean] = None
    CustomIamInstanceProfile: Optional[String] = None
    CustomerOwnedIpEnabled: Optional[BooleanOptional] = None
    DBClusterIdentifier: Optional[String] = None
    DBInstanceArn: Optional[String] = None
    DBInstanceAutomatedBackupsReplications: Optional[
        DBInstanceAutomatedBackupsReplicationList
    ] = None
    DBInstanceClass: Optional[String] = None
    DBInstanceIdentifier: Optional[String] = None
    DBInstanceStatus: Optional[String] = None
    DBName: Optional[String] = None
    DBParameterGroups: Optional[DBParameterGroupStatusList] = None
    DBSecurityGroups: Optional[DBSecurityGroupMembershipList] = None
    DBSubnetGroup_1: Optional[DBSubnetGroup] = Field(None, alias='DBSubnetGroup')
    DBSystemId: Optional[String] = None
    DbInstancePort: Optional[Integer] = None
    DbiResourceId: Optional[String] = None
    DeletionProtection: Optional[Boolean] = None
    DomainMemberships: Optional[DomainMembershipList] = None
    EnabledCloudwatchLogsExports: Optional[LogTypeList] = None
    Endpoint_1: Optional[Endpoint] = Field(None, alias='Endpoint')
    Engine: Optional[String] = None
    EngineVersion: Optional[String] = None
    EnhancedMonitoringResourceArn: Optional[String] = None
    IAMDatabaseAuthenticationEnabled: Optional[Boolean] = None
    InstanceCreateTime: Optional[TStamp] = None
    Iops: Optional[IntegerOptional] = None
    KmsKeyId: Optional[String] = None
    LatestRestorableTime: Optional[TStamp] = None
    LicenseModel: Optional[String] = None
    ListenerEndpoint: Optional[Endpoint] = None
    MasterUserSecret_1: Optional[MasterUserSecret] = Field(
        None, alias='MasterUserSecret'
    )
    MasterUsername: Optional[String] = None
    MaxAllocatedStorage: Optional[IntegerOptional] = None
    MonitoringInterval: Optional[IntegerOptional] = None
    MonitoringRoleArn: Optional[String] = None
    MultiAZ: Optional[Boolean] = None
    NcharCharacterSetName: Optional[String] = None
    NetworkType: Optional[String] = None
    OptionGroupMemberships: Optional[OptionGroupMembershipList] = None
    PendingModifiedValues_1: Optional[PendingModifiedValues] = Field(
        None, alias='PendingModifiedValues'
    )
    PerformanceInsightsEnabled: Optional[BooleanOptional] = None
    PerformanceInsightsKMSKeyId: Optional[String] = None
    PerformanceInsightsRetentionPeriod: Optional[IntegerOptional] = None
    PreferredBackupWindow: Optional[String] = None
    PreferredMaintenanceWindow: Optional[String] = None
    ProcessorFeatures: Optional[ProcessorFeatureList] = None
    PromotionTier: Optional[IntegerOptional] = None
    PubliclyAccessible: Optional[Boolean] = None
    ReadReplicaDBClusterIdentifiers: Optional[ReadReplicaDBClusterIdentifierList] = None
    ReadReplicaDBInstanceIdentifiers: Optional[ReadReplicaDBInstanceIdentifierList] = (
        None
    )
    ReadReplicaSourceDBClusterIdentifier: Optional[String] = None
    ReadReplicaSourceDBInstanceIdentifier: Optional[String] = None
    ReplicaMode_1: Optional[ReplicaMode] = Field(None, alias='ReplicaMode')
    ResumeFullAutomationModeTime: Optional[TStamp] = None
    SecondaryAvailabilityZone: Optional[String] = None
    StatusInfos: Optional[DBInstanceStatusInfoList] = None
    StorageEncrypted: Optional[Boolean] = None
    StorageThroughput: Optional[IntegerOptional] = None
    StorageType: Optional[String] = None
    TagList_1: Optional[TagList] = Field(None, alias='TagList')
    TdeCredentialArn: Optional[String] = None
    Timezone: Optional[String] = None
    VpcSecurityGroups: Optional[VpcSecurityGroupMembershipList] = None


class DBInstanceList(RootModel[List[DBInstance]]):
    root: List[DBInstance]


class DBInstanceMessage(BaseModel):
    DBInstances: Optional[DBInstanceList] = None
    Marker: Optional[String] = None


class DBSecurityGroupMessage(BaseModel):
    DBSecurityGroups_1: Optional[DBSecurityGroups] = Field(
        None, alias='DBSecurityGroups'
    )
    Marker: Optional[String] = None


class DBSubnetGroupMessage(BaseModel):
    DBSubnetGroups_1: Optional[DBSubnetGroups] = Field(None, alias='DBSubnetGroups')
    Marker: Optional[String] = None


class DeleteDBClusterResult(BaseModel):
    DBCluster_1: Optional[DBCluster] = Field(None, alias='DBCluster')


class DeleteDBInstanceResult(BaseModel):
    DBInstance_1: Optional[DBInstance] = Field(None, alias='DBInstance')


class DeleteEventSubscriptionResult(BaseModel):
    EventSubscription_1: Optional[EventSubscription] = Field(
        None, alias='EventSubscription'
    )


class DescribeBlueGreenDeploymentsRequest(BaseModel):
    BlueGreenDeploymentIdentifier_1: Optional[BlueGreenDeploymentIdentifier] = Field(
        None, alias='BlueGreenDeploymentIdentifier'
    )
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords_1: Optional[MaxRecords] = Field(None, alias='MaxRecords')


class DescribeCertificatesMessage(BaseModel):
    CertificateIdentifier: Optional[String] = None
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeDBClusterBacktracksMessage(BaseModel):
    BacktrackIdentifier: Optional[String] = None
    DBClusterIdentifier: String
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeDBClusterEndpointsMessage(BaseModel):
    DBClusterEndpointIdentifier: Optional[String] = None
    DBClusterIdentifier: Optional[String] = None
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeDBClusterParameterGroupsMessage(BaseModel):
    DBClusterParameterGroupName: Optional[String] = None
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeDBClusterParametersMessage(BaseModel):
    DBClusterParameterGroupName: String
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    Source: Optional[String] = None


class DescribeDBClusterSnapshotsMessage(BaseModel):
    DBClusterIdentifier: Optional[String] = None
    DBClusterSnapshotIdentifier: Optional[String] = None
    Filters: Optional[FilterList] = None
    IncludePublic: Optional[Boolean] = None
    IncludeShared: Optional[Boolean] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    SnapshotType: Optional[String] = None


class DescribeDBClustersMessage(BaseModel):
    DBClusterIdentifier: Optional[String] = None
    Filters: Optional[FilterList] = None
    IncludeShared: Optional[Boolean] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeDBEngineVersionsMessage(BaseModel):
    DBParameterGroupFamily: Optional[String] = None
    DefaultOnly: Optional[Boolean] = None
    Engine: Optional[String] = None
    EngineVersion: Optional[String] = None
    Filters: Optional[FilterList] = None
    IncludeAll: Optional[BooleanOptional] = None
    ListSupportedCharacterSets: Optional[BooleanOptional] = None
    ListSupportedTimezones: Optional[BooleanOptional] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeDBInstanceAutomatedBackupsMessage(BaseModel):
    DBInstanceAutomatedBackupsArn: Optional[String] = None
    DBInstanceIdentifier: Optional[String] = None
    DbiResourceId: Optional[String] = None
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeDBInstancesMessage(BaseModel):
    DBInstanceIdentifier: Optional[String] = None
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeDBLogFilesMessage(BaseModel):
    DBInstanceIdentifier: String
    FileLastWritten: Optional[Long] = None
    FileSize: Optional[Long] = None
    FilenameContains: Optional[String] = None
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeDBParameterGroupsMessage(BaseModel):
    DBParameterGroupName: Optional[String] = None
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeDBParametersMessage(BaseModel):
    DBParameterGroupName: String
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    Source: Optional[String] = None


class DescribeDBProxiesRequest(BaseModel):
    DBProxyName: Optional[String] = None
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords_1: Optional[MaxRecords] = Field(None, alias='MaxRecords')


class DescribeDBProxyEndpointsRequest(BaseModel):
    DBProxyEndpointName_1: Optional[DBProxyEndpointName] = Field(
        None, alias='DBProxyEndpointName'
    )
    DBProxyName_1: Optional[DBProxyName] = Field(None, alias='DBProxyName')
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords_1: Optional[MaxRecords] = Field(None, alias='MaxRecords')


class DescribeDBProxyTargetGroupsRequest(BaseModel):
    DBProxyName: String
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords_1: Optional[MaxRecords] = Field(None, alias='MaxRecords')
    TargetGroupName: Optional[String] = None


class DescribeDBProxyTargetsRequest(BaseModel):
    DBProxyName: String
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords_1: Optional[MaxRecords] = Field(None, alias='MaxRecords')
    TargetGroupName: Optional[String] = None


class DescribeDBProxyTargetsResponse(BaseModel):
    Marker: Optional[String] = None
    Targets: Optional[TargetList] = None


class DescribeDBSecurityGroupsMessage(BaseModel):
    DBSecurityGroupName: Optional[String] = None
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeDBSnapshotsMessage(BaseModel):
    DBInstanceIdentifier: Optional[String] = None
    DBSnapshotIdentifier: Optional[String] = None
    DbiResourceId: Optional[String] = None
    Filters: Optional[FilterList] = None
    IncludePublic: Optional[Boolean] = None
    IncludeShared: Optional[Boolean] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    SnapshotType: Optional[String] = None


class DescribeDBSubnetGroupsMessage(BaseModel):
    DBSubnetGroupName: Optional[String] = None
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeEngineDefaultClusterParametersMessage(BaseModel):
    DBParameterGroupFamily: String
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeEngineDefaultClusterParametersResult(BaseModel):
    EngineDefaults_1: Optional[EngineDefaults] = Field(None, alias='EngineDefaults')


class DescribeEngineDefaultParametersMessage(BaseModel):
    DBParameterGroupFamily: String
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeEngineDefaultParametersResult(BaseModel):
    EngineDefaults_1: Optional[EngineDefaults] = Field(None, alias='EngineDefaults')


class DescribeEventCategoriesMessage(BaseModel):
    Filters: Optional[FilterList] = None
    SourceType: Optional[String] = None


class DescribeEventSubscriptionsMessage(BaseModel):
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    SubscriptionName: Optional[String] = None


class DescribeEventsMessage(BaseModel):
    Duration: Optional[IntegerOptional] = None
    EndTime: Optional[TStamp] = None
    EventCategories: Optional[EventCategoriesList] = None
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    SourceIdentifier: Optional[String] = None
    SourceType_1: Optional[SourceType] = Field(None, alias='SourceType')
    StartTime: Optional[TStamp] = None


class DescribeExportTasksMessage(BaseModel):
    ExportTaskIdentifier: Optional[String] = None
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords_1: Optional[MaxRecords] = Field(None, alias='MaxRecords')
    SourceArn: Optional[String] = None
    SourceType: Optional[ExportSourceType] = None


class DescribeGlobalClustersMessage(BaseModel):
    Filters: Optional[FilterList] = None
    GlobalClusterIdentifier: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeOptionGroupOptionsMessage(BaseModel):
    EngineName: String
    Filters: Optional[FilterList] = None
    MajorEngineVersion: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeOptionGroupsMessage(BaseModel):
    EngineName: Optional[String] = None
    Filters: Optional[FilterList] = None
    MajorEngineVersion: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    OptionGroupName: Optional[String] = None


class DescribeOrderableDBInstanceOptionsMessage(BaseModel):
    AvailabilityZoneGroup: Optional[String] = None
    DBInstanceClass: Optional[String] = None
    Engine: String
    EngineVersion: Optional[String] = None
    Filters: Optional[FilterList] = None
    LicenseModel: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    Vpc: Optional[BooleanOptional] = None


class DescribePendingMaintenanceActionsMessage(BaseModel):
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    ResourceIdentifier: Optional[String] = None


class DescribeReservedDBInstancesMessage(BaseModel):
    DBInstanceClass: Optional[String] = None
    Duration: Optional[String] = None
    Filters: Optional[FilterList] = None
    LeaseId: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    MultiAZ: Optional[BooleanOptional] = None
    OfferingType: Optional[String] = None
    ProductDescription: Optional[String] = None
    ReservedDBInstanceId: Optional[String] = None
    ReservedDBInstancesOfferingId: Optional[String] = None


class DescribeReservedDBInstancesOfferingsMessage(BaseModel):
    DBInstanceClass: Optional[String] = None
    Duration: Optional[String] = None
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    MultiAZ: Optional[BooleanOptional] = None
    OfferingType: Optional[String] = None
    ProductDescription: Optional[String] = None
    ReservedDBInstancesOfferingId: Optional[String] = None


class DescribeSourceRegionsMessage(BaseModel):
    Filters: Optional[FilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    RegionName: Optional[String] = None


class FailoverDBClusterResult(BaseModel):
    DBCluster_1: Optional[DBCluster] = Field(None, alias='DBCluster')


class GlobalCluster(BaseModel):
    DatabaseName: Optional[String] = None
    DeletionProtection: Optional[BooleanOptional] = None
    Engine: Optional[String] = None
    EngineVersion: Optional[String] = None
    FailoverState_1: Optional[FailoverState] = Field(None, alias='FailoverState')
    GlobalClusterArn: Optional[String] = None
    GlobalClusterIdentifier: Optional[String] = None
    GlobalClusterMembers: Optional[GlobalClusterMemberList] = None
    GlobalClusterResourceId: Optional[String] = None
    Status: Optional[String] = None
    StorageEncrypted: Optional[BooleanOptional] = None


class GlobalClusterList(RootModel[List[GlobalCluster]]):
    root: List[GlobalCluster]


class GlobalClustersMessage(BaseModel):
    GlobalClusters: Optional[GlobalClusterList] = None
    Marker: Optional[String] = None


class ModifyDBClusterResult(BaseModel):
    DBCluster_1: Optional[DBCluster] = Field(None, alias='DBCluster')


class ModifyDBInstanceResult(BaseModel):
    DBInstance_1: Optional[DBInstance] = Field(None, alias='DBInstance')


class ModifyGlobalClusterResult(BaseModel):
    GlobalCluster_1: Optional[GlobalCluster] = Field(None, alias='GlobalCluster')


class ModifyOptionGroupMessage(BaseModel):
    ApplyImmediately: Optional[Boolean] = None
    OptionGroupName: String
    OptionsToInclude: Optional[OptionConfigurationList] = None
    OptionsToRemove: Optional[OptionNamesList] = None


class OptionGroup(BaseModel):
    AllowsVpcAndNonVpcInstanceMemberships: Optional[Boolean] = None
    CopyTimestamp: Optional[TStamp] = None
    EngineName: Optional[String] = None
    MajorEngineVersion: Optional[String] = None
    OptionGroupArn: Optional[String] = None
    OptionGroupDescription: Optional[String] = None
    OptionGroupName: Optional[String] = None
    Options: Optional[OptionsList] = None
    SourceAccountId: Optional[String] = None
    SourceOptionGroup: Optional[String] = None
    VpcId: Optional[String] = None


class OptionGroupOption(BaseModel):
    CopyableCrossAccount: Optional[BooleanOptional] = None
    DefaultPort: Optional[IntegerOptional] = None
    Description: Optional[String] = None
    EngineName: Optional[String] = None
    MajorEngineVersion: Optional[String] = None
    MinimumRequiredMinorEngineVersion: Optional[String] = None
    Name: Optional[String] = None
    OptionGroupOptionSettings: Optional[OptionGroupOptionSettingsList] = None
    OptionGroupOptionVersions: Optional[OptionGroupOptionVersionsList] = None
    OptionsConflictsWith_1: Optional[OptionsConflictsWith] = Field(
        None, alias='OptionsConflictsWith'
    )
    OptionsDependedOn_1: Optional[OptionsDependedOn] = Field(
        None, alias='OptionsDependedOn'
    )
    Permanent: Optional[Boolean] = None
    Persistent: Optional[Boolean] = None
    PortRequired: Optional[Boolean] = None
    RequiresAutoMinorEngineVersionUpgrade: Optional[Boolean] = None
    SupportsOptionVersionDowngrade: Optional[BooleanOptional] = None
    VpcOnly: Optional[Boolean] = None


class OptionGroupOptionsList(RootModel[List[OptionGroupOption]]):
    root: List[OptionGroupOption] = Field(
        ..., description='List of available option group options.'
    )


class OptionGroupOptionsMessage(BaseModel):
    Marker: Optional[String] = None
    OptionGroupOptions: Optional[OptionGroupOptionsList] = None


class OptionGroupsList(RootModel[List[OptionGroup]]):
    root: List[OptionGroup]


class PromoteReadReplicaDBClusterResult(BaseModel):
    DBCluster_1: Optional[DBCluster] = Field(None, alias='DBCluster')


class PromoteReadReplicaResult(BaseModel):
    DBInstance_1: Optional[DBInstance] = Field(None, alias='DBInstance')


class RebootDBClusterResult(BaseModel):
    DBCluster_1: Optional[DBCluster] = Field(None, alias='DBCluster')


class RebootDBInstanceResult(BaseModel):
    DBInstance_1: Optional[DBInstance] = Field(None, alias='DBInstance')


class RegisterDBProxyTargetsResponse(BaseModel):
    DBProxyTargets: Optional[TargetList] = None


class RemoveFromGlobalClusterResult(BaseModel):
    GlobalCluster_1: Optional[GlobalCluster] = Field(None, alias='GlobalCluster')


class RestoreDBClusterFromS3Result(BaseModel):
    DBCluster_1: Optional[DBCluster] = Field(None, alias='DBCluster')


class RestoreDBClusterFromSnapshotResult(BaseModel):
    DBCluster_1: Optional[DBCluster] = Field(None, alias='DBCluster')


class RestoreDBClusterToPointInTimeResult(BaseModel):
    DBCluster_1: Optional[DBCluster] = Field(None, alias='DBCluster')


class RestoreDBInstanceFromDBSnapshotResult(BaseModel):
    DBInstance_1: Optional[DBInstance] = Field(None, alias='DBInstance')


class RestoreDBInstanceFromS3Result(BaseModel):
    DBInstance_1: Optional[DBInstance] = Field(None, alias='DBInstance')


class RestoreDBInstanceToPointInTimeResult(BaseModel):
    DBInstance_1: Optional[DBInstance] = Field(None, alias='DBInstance')


class StartDBClusterResult(BaseModel):
    DBCluster_1: Optional[DBCluster] = Field(None, alias='DBCluster')


class StartDBInstanceResult(BaseModel):
    DBInstance_1: Optional[DBInstance] = Field(None, alias='DBInstance')


class StopDBClusterResult(BaseModel):
    DBCluster_1: Optional[DBCluster] = Field(None, alias='DBCluster')


class StopDBInstanceResult(BaseModel):
    DBInstance_1: Optional[DBInstance] = Field(None, alias='DBInstance')


class SwitchoverReadReplicaResult(BaseModel):
    DBInstance_1: Optional[DBInstance] = Field(None, alias='DBInstance')


class CopyOptionGroupResult(BaseModel):
    OptionGroup_1: Optional[OptionGroup] = Field(None, alias='OptionGroup')


class CreateDBClusterResult(BaseModel):
    DBCluster_1: Optional[DBCluster] = Field(None, alias='DBCluster')


class CreateDBInstanceReadReplicaResult(BaseModel):
    DBInstance_1: Optional[DBInstance] = Field(None, alias='DBInstance')


class CreateDBInstanceResult(BaseModel):
    DBInstance_1: Optional[DBInstance] = Field(None, alias='DBInstance')


class CreateGlobalClusterResult(BaseModel):
    GlobalCluster_1: Optional[GlobalCluster] = Field(None, alias='GlobalCluster')


class CreateOptionGroupResult(BaseModel):
    OptionGroup_1: Optional[OptionGroup] = Field(None, alias='OptionGroup')


class DeleteGlobalClusterResult(BaseModel):
    GlobalCluster_1: Optional[GlobalCluster] = Field(None, alias='GlobalCluster')


class FailoverGlobalClusterResult(BaseModel):
    GlobalCluster_1: Optional[GlobalCluster] = Field(None, alias='GlobalCluster')


class ModifyOptionGroupResult(BaseModel):
    OptionGroup_1: Optional[OptionGroup] = Field(None, alias='OptionGroup')


class OptionGroups(BaseModel):
    Marker: Optional[String] = None
    OptionGroupsList_1: Optional[OptionGroupsList] = Field(
        None, alias='OptionGroupsList'
    )
